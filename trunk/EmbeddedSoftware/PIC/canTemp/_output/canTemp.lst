MP2COD 4.02, COFF to COD File Converter
Copyright (c) 2006 Microchip Technology Inc.
Listing File Generated: Sun Feb 25 20:42:15 2007


Address  Value    Disassembly              Source                                                                           File
-------  -------  -----------------------  -------------------------------------------------------------------------------  -----
                                           /*********************************************************************           F:\MCP\projects\CAN\canBase\Source\CAN.c
                                            *                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                            *                  CAN module                                                   F:\MCP\projects\CAN\canBase\Source\CAN.c
                                            *                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                            *********************************************************************           F:\MCP\projects\CAN\canBase\Source\CAN.c
                                            * FileName:        $HeadURL: http://svn.arune.se/svn/HomeAutomation/trunk/EmbeddedSoftware/PIC/canBase/Source/CAN.c $ F:\MCP\projects\CAN\canBase\Source\CAN.c
                                            * Last changed:	$LastChangedDate: 2007-02-03 16:58:13 +0100 (l√∂, 03 feb 2007) $ F:\MCP\projects\CAN\canBase\Source\CAN.c
                                            * By:				$LastChangedBy: johboh $                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                            * Revision:		$Revision: 282 $                                                   F:\MCP\projects\CAN\canBase\Source\CAN.c
                                            ********************************************************************/           F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           #include <CANdefs.h>                                                             F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           #include <stackTasks.h>                                                          F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           #include <CAN.h>                                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           #include <EEaccess.h>                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           #include <funcdefs.h>                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           #include <Tick.h>                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           TICK heartbeat;                                                                  F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           static int MY_ID = DEFAULT_ID;                                                   F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           static CAN_PACKET outCp;                                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           static void canGetPacket(void);                                                  F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           /*                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Function: canInit                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Input:	none                                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Output: none                                                                   F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Affects: Changes can registers.                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           */                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           void canInit()                                                                   F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           {                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
003050   0e80     MOVLW     0x80           	CANCON = 0x80; //request config mode                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003052   6e6f     MOVWF     0x6f,0x0                                                                                        
003054   0ee0     MOVLW     0xe0           	while ((CANSTAT & 0xE0) != 0x80 ); //wait for config mode request               F:\MCP\projects\CAN\canBase\Source\CAN.c
003056   146e     ANDWF     0x6e,0x0,0x0                                                                                    
003058   0880     SUBLW     0x80                                                                                            
00305a   e001     BZ        0x305e                                                                                          
00305c   d7fb     BRA       0x3054                                                                                          
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// BAUD AND TQS                                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// 500Khz@40Mhz (new by the book)                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
00305e   0e04     MOVLW     0x4            	BRGCON1 = 0x04;                                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
003060   6e70     MOVWF     0x70,0x0                                                                                        
003062   0ed1     MOVLW     0xd1           	BRGCON2 = 0xD1;                                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
003064   6e71     MOVWF     0x71,0x0                                                                                        
003066   0e81     MOVLW     0x81           	BRGCON3 = 0x81;                                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
003068   6e72     MOVWF     0x72,0x0                                                                                        
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON1=0;                                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Sync_Seq = 2 x TQ = 1                                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON1bits.SJW1=0;                                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON1bits.SJW0=1;                                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Setting BRP.                                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON1=BRGCON1|CAN_BRP;                                                      F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Maximum PHEG1                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON2bits.SEG2PHTS = 1;                                                     F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Phase_Seg1 = 2 x TQ = 1                                                      F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON2bits.SEG1PH2 = 0;                                                      F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON2bits.SEG1PH1 = 0;                                                      F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON2bits.SEG1PH0 = 1;                                                      F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Prop_Seq = 2 x TQ = 1                                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON2bits.PRSEG2 = 0;                                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON2bits.PRSEG1 = 0;                                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON2bits.PRSEG0 = 1;                                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//  Enableing bus wake-up                                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON3bits.WAKDIS = 0;                                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Dont use filter when wakeup                                                  F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON3bits.WAKFIL = 0;                                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Phase_Seg2 = 2 x TQ = 1                                                      F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON3bits.SEG2PH2 = 0;                                                      F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON3bits.SEG2PH1 = 0;                                                      F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//BRGCON3bits.SEG2PH0 = 1;                                                      F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
00306a   6a77     CLRF      0x77,0x0       	ECANCON=0;                                                                      F:\MCP\projects\CAN\canBase\Source\CAN.c
00306c   8e77     BSF       0x77,0x7,0x0   	ECANCONbits.MDSEL1 = 1; // 0  For mode 1                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
00306e   9c77     BCF       0x77,0x6,0x0   	ECANCONbits.MDSEL0 = 0; // 1  For mode 1                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// FILTERS AND MASKS                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003070   8c60     BSF       0x60,0x6,0x0   	RXB0CONbits.RXM1=1;                                                             F:\MCP\projects\CAN\canBase\Source\CAN.c
003072   9a60     BCF       0x60,0x5,0x0   	RXB0CONbits.RXM0=0;                                                             F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// INTERRUPTS                                                                   F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Diable transmit interrupt                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
003074   010d     MOVLB     0xd            	TXBIE = 0;                                                                      F:\MCP\projects\CAN\canBase\Source\CAN.c
003076   6bfc     CLRF      0xfc,0x1                                                                                        
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//rx any interrupt                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
003078   6aa4     CLRF      0xa4,0x0       	PIR3 = 0;                                                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
00307a   0e03     MOVLW     0x3            	PIE3 = 0b00000011;                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
00307c   6ea3     MOVWF     0xa3,0x0                                                                                        
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// High interrupt                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
00307e   6ea5     MOVWF     0xa5,0x0       	IPR3 =0b00000011;                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Programmable buffers interrupt                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
003080   69fa     SETF      0xfa,0x1       	BIE0  = 0xFF;	                                                                  F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//loopback mode or not                                                          F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	#ifdef CAN_LOOPBACK_MODE                                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		CANCON = 0x40;//request loopback mode                                          F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		while ((CANSTAT & 0xE0) != 0x40 );//wait for loopback mode                     F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	#else                                                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
003082   6a6f     CLRF      0x6f,0x0       		CANCON = 0x00;//request normal mode                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003084   0ee0     MOVLW     0xe0           		while ((CANSTAT & 0xE0) != 0x00 );//wait for normal mode                       F:\MCP\projects\CAN\canBase\Source\CAN.c
003086   146e     ANDWF     0x6e,0x0,0x0                                                                                    
003088   e001     BZ        0x308c                                                                                          
00308a   d7fc     BRA       0x3084                                                                                          
                                           	#endif                                                                          F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Init ticker service                                                          F:\MCP\projects\CAN\canBase\Source\CAN.c
00308c   ec6d     CALL      0x38da,0x0     	tickInit();                                                                     F:\MCP\projects\CAN\canBase\Source\CAN.c
00308e   f01c                                                                                                               
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Read ID and NID if exist.                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
003090   0e00     MOVLW     0x0            	if (EERead(NODE_ID_EE)==NODE_HAS_ID)                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003092   6ee6     MOVWF     0xe6,0x0                                                                                        
003094   6ae6     CLRF      0xe6,0x0                                                                                        
003096   ecc8     CALL      0x3790,0x0                                                                                      
003098   f01b                                                                                                               
00309a   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00309c   52e5     MOVF      0xe5,0x1,0x0                                                                                    
00309e   082a     SUBLW     0x2a                                                                                            
0030a0   e10a     BNZ       0x30b6                                                                                          
                                           	{                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
0030a2   0e01     MOVLW     0x1            		MY_ID=+EERead(NODE_ID_EE + 1);                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
0030a4   6ee6     MOVWF     0xe6,0x0                                                                                        
0030a6   6ae6     CLRF      0xe6,0x0                                                                                        
0030a8   ecc8     CALL      0x3790,0x0                                                                                      
0030aa   f01b                                                                                                               
0030ac   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030ae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0030b0   0100     MOVLB     0x0                                                                                             
0030b2   6f95     MOVWF     0x95,0x1                                                                                        
0030b4   6b96     CLRF      0x96,0x1                                                                                        
                                           	}                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Send user program startup heatbeat                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
0030b6   0100     MOVLB     0x0            	outCp.type=ptPGM;                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
0030b8   0e01     MOVLW     0x1                                                                                             
0030ba   6f64     MOVWF     0x64,0x1                                                                                        
0030bc   6b65     CLRF      0x65,0x1       	outCp.pgm.class=pcCTRL;                                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
0030be   6f66     MOVWF     0x66,0x1       	outCp.pgm.id=pctAPPBOOT;                                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
0030c0   6b67     CLRF      0x67,0x1                                                                                        
0030c2   6b6c     CLRF      0x6c,0x1       	outCp.length=0;                                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
0030c4   0e02     MOVLW     0x2            	while(!canSendMessage(outCp,PRIO_HIGH));                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
0030c6   6ee6     MOVWF     0xe6,0x0                                                                                        
0030c8   c064     MOVFF     0x64,0xfe6                                                                                      
0030ca   ffe6                                                                                                               
0030cc   c065     MOVFF     0x65,0xfe6                                                                                      
0030ce   ffe6                                                                                                               
0030d0   c066     MOVFF     0x66,0xfe6                                                                                      
0030d2   ffe6                                                                                                               
0030d4   c067     MOVFF     0x67,0xfe6                                                                                      
0030d6   ffe6                                                                                                               
0030d8   c068     MOVFF     0x68,0xfe6                                                                                      
0030da   ffe6                                                                                                               
0030dc   c069     MOVFF     0x69,0xfe6                                                                                      
0030de   ffe6                                                                                                               
0030e0   c06a     MOVFF     0x6a,0xfe6                                                                                      
0030e2   ffe6                                                                                                               
0030e4   c06b     MOVFF     0x6b,0xfe6                                                                                      
0030e6   ffe6                                                                                                               
0030e8   c06c     MOVFF     0x6c,0xfe6                                                                                      
0030ea   ffe6                                                                                                               
0030ec   c06d     MOVFF     0x6d,0xfe6                                                                                      
0030ee   ffe6                                                                                                               
0030f0   c06e     MOVFF     0x6e,0xfe6                                                                                      
0030f2   ffe6                                                                                                               
0030f4   c06f     MOVFF     0x6f,0xfe6                                                                                      
0030f6   ffe6                                                                                                               
0030f8   c070     MOVFF     0x70,0xfe6                                                                                      
0030fa   ffe6                                                                                                               
0030fc   c071     MOVFF     0x71,0xfe6                                                                                      
0030fe   ffe6                                                                                                               
003100   c072     MOVFF     0x72,0xfe6                                                                                      
003102   ffe6                                                                                                               
003104   c073     MOVFF     0x73,0xfe6                                                                                      
003106   ffe6                                                                                                               
003108   c074     MOVFF     0x74,0xfe6                                                                                      
00310a   ffe6                                                                                                               
00310c   d9c8     RCALL     0x349e                                                                                          
00310e   6e0b     MOVWF     0xb,0x0                                                                                         
003110   0e12     MOVLW     0x12                                                                                            
003112   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003114   500b     MOVF      0xb,0x0,0x0                                                                                     
003116   0900     IORLW     0x0                                                                                             
003118   e101     BNZ       0x311c                                                                                          
00311a   d7d4     BRA       0x30c4                                                                                          
00311c   0012     RETURN    0x0            }                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           /*                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Function: canISR                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Input:	none                                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Output: none                                                                   F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Pre-conditions: a call to canInit()                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Affects: interrupt registers and receive data buffers                          F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Depends: ..                                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           */                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           void canISR()                                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           {                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
00311e   0004     CLRWDT                   	ClrWdt();                                                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003120   50a4     MOVF      0xa4,0x0,0x0   	if (PIR3bits.RXBnIF || PIR3bits.RXB1IF || PIR3bits.RXB0IF)                      F:\MCP\projects\CAN\canBase\Source\CAN.c
003122   0b02     ANDLW     0x2                                                                                             
003124   e106     BNZ       0x3132                                                                                          
003126   50a4     MOVF      0xa4,0x0,0x0                                                                                    
003128   0b02     ANDLW     0x2                                                                                             
00312a   e103     BNZ       0x3132                                                                                          
00312c   50a4     MOVF      0xa4,0x0,0x0                                                                                    
00312e   0b01     ANDLW     0x1                                                                                             
003130   e016     BZ        0x315e                                                                                          
                                           	{                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
003132   0e0f     MOVLW     0xf            		ECANCON=(ECANCON&0b00000)|(0b10000|(CANCON&0x0F));                             F:\MCP\projects\CAN\canBase\Source\CAN.c
003134   146f     ANDWF     0x6f,0x0,0x0                                                                                    
003136   0910     IORLW     0x10                                                                                            
003138   6e0b     MOVWF     0xb,0x0                                                                                         
00313a   0e00     MOVLW     0x0                                                                                             
00313c   1477     ANDWF     0x77,0x0,0x0                                                                                    
00313e   100b     IORWF     0xb,0x0,0x0                                                                                     
003140   6e77     MOVWF     0x77,0x0                                                                                        
003142   be60     BTFSC     0x60,0x7,0x0   		if (RXB0CONbits.RXFUL) canGetPacket();                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
003144   d869     RCALL     0x3218                                                                                          
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
003146   a2a4     BTFSS     0xa4,0x1,0x0   		if (PIR3bits.RXBnIF) {PIR3bits.RXBnIF = 0; return;}                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003148   d002     BRA       0x314e                                                                                          
00314a   92a4     BCF       0xa4,0x1,0x0                                                                                    
00314c   d064     BRA       0x3216                                                                                          
00314e   a2a4     BTFSS     0xa4,0x1,0x0   		if (PIR3bits.RXB1IF) {PIR3bits.RXB1IF = 0; return;}                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003150   d002     BRA       0x3156                                                                                          
003152   92a4     BCF       0xa4,0x1,0x0                                                                                    
003154   d060     BRA       0x3216                                                                                          
003156   a0a4     BTFSS     0xa4,0x0,0x0   		if (PIR3bits.RXB0IF) {PIR3bits.RXB0IF = 0; return;}                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003158   d002     BRA       0x315e                                                                                          
00315a   90a4     BCF       0xa4,0x0,0x0                                                                                    
00315c   d05c     BRA       0x3216                                                                                          
                                           	}                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
00315e   ec81     CALL      0x3902,0x0     	tickUpdate();                                                                   F:\MCP\projects\CAN\canBase\Source\CAN.c
003160   f01c                                                                                                               
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003162   ec77     CALL      0x38ee,0x0     	if ((tickGet()-heartbeat)>TICK_SECOND*5)                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
003164   f01c                                                                                                               
003166   0100     MOVLB     0x0                                                                                             
003168   5160     MOVF      0x60,0x0,0x1                                                                                    
00316a   5c04     SUBWF     0x4,0x0,0x0                                                                                     
00316c   6e0b     MOVWF     0xb,0x0                                                                                         
00316e   0100     MOVLB     0x0                                                                                             
003170   5161     MOVF      0x61,0x0,0x1                                                                                    
003172   5805     SUBWFB    0x5,0x0,0x0                                                                                     
003174   6e0c     MOVWF     0xc,0x0                                                                                         
003176   0100     MOVLB     0x0                                                                                             
003178   5162     MOVF      0x62,0x0,0x1                                                                                    
00317a   5806     SUBWFB    0x6,0x0,0x0                                                                                     
00317c   6e0d     MOVWF     0xd,0x0                                                                                         
00317e   0100     MOVLB     0x0                                                                                             
003180   5163     MOVF      0x63,0x0,0x1                                                                                    
003182   5807     SUBWFB    0x7,0x0,0x0                                                                                     
003184   6e0e     MOVWF     0xe,0x0                                                                                         
003186   80d8     BSF       0xd8,0x0,0x0                                                                                    
003188   0ef4     MOVLW     0xf4                                                                                            
00318a   540b     SUBFWB    0xb,0x0,0x0                                                                                     
00318c   0e01     MOVLW     0x1                                                                                             
00318e   540c     SUBFWB    0xc,0x0,0x0                                                                                     
003190   0e00     MOVLW     0x0                                                                                             
003192   540d     SUBFWB    0xd,0x0,0x0                                                                                     
003194   0e00     MOVLW     0x0                                                                                             
003196   540e     SUBFWB    0xe,0x0,0x0                                                                                     
003198   e23e     BC        0x3216                                                                                          
                                           	{                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		// Send alive heartbeat                                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
00319a   0100     MOVLB     0x0            		outCp.type=ptPGM;                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
00319c   0e01     MOVLW     0x1                                                                                             
00319e   6f64     MOVWF     0x64,0x1                                                                                        
0031a0   0100     MOVLB     0x0            		outCp.pgm.class=pcCTRL;                                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
0031a2   6b65     CLRF      0x65,0x1                                                                                        
0031a4   0e02     MOVLW     0x2            		outCp.pgm.id=pctHEARTBEAT;                                                     F:\MCP\projects\CAN\canBase\Source\CAN.c
0031a6   0100     MOVLB     0x0                                                                                             
0031a8   6f66     MOVWF     0x66,0x1                                                                                        
0031aa   6b67     CLRF      0x67,0x1                                                                                        
0031ac   0100     MOVLB     0x0            		outCp.length=0;                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
0031ae   6b6c     CLRF      0x6c,0x1                                                                                        
0031b0   0e02     MOVLW     0x2            		canSendMessage(outCp,PRIO_HIGH);                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
0031b2   6ee6     MOVWF     0xe6,0x0                                                                                        
0031b4   c064     MOVFF     0x64,0xfe6                                                                                      
0031b6   ffe6                                                                                                               
0031b8   c065     MOVFF     0x65,0xfe6                                                                                      
0031ba   ffe6                                                                                                               
0031bc   c066     MOVFF     0x66,0xfe6                                                                                      
0031be   ffe6                                                                                                               
0031c0   c067     MOVFF     0x67,0xfe6                                                                                      
0031c2   ffe6                                                                                                               
0031c4   c068     MOVFF     0x68,0xfe6                                                                                      
0031c6   ffe6                                                                                                               
0031c8   c069     MOVFF     0x69,0xfe6                                                                                      
0031ca   ffe6                                                                                                               
0031cc   c06a     MOVFF     0x6a,0xfe6                                                                                      
0031ce   ffe6                                                                                                               
0031d0   c06b     MOVFF     0x6b,0xfe6                                                                                      
0031d2   ffe6                                                                                                               
0031d4   c06c     MOVFF     0x6c,0xfe6                                                                                      
0031d6   ffe6                                                                                                               
0031d8   c06d     MOVFF     0x6d,0xfe6                                                                                      
0031da   ffe6                                                                                                               
0031dc   c06e     MOVFF     0x6e,0xfe6                                                                                      
0031de   ffe6                                                                                                               
0031e0   c06f     MOVFF     0x6f,0xfe6                                                                                      
0031e2   ffe6                                                                                                               
0031e4   c070     MOVFF     0x70,0xfe6                                                                                      
0031e6   ffe6                                                                                                               
0031e8   c071     MOVFF     0x71,0xfe6                                                                                      
0031ea   ffe6                                                                                                               
0031ec   c072     MOVFF     0x72,0xfe6                                                                                      
0031ee   ffe6                                                                                                               
0031f0   c073     MOVFF     0x73,0xfe6                                                                                      
0031f2   ffe6                                                                                                               
0031f4   c074     MOVFF     0x74,0xfe6                                                                                      
0031f6   ffe6                                                                                                               
0031f8   d952     RCALL     0x349e                                                                                          
0031fa   6e0b     MOVWF     0xb,0x0                                                                                         
0031fc   0e12     MOVLW     0x12                                                                                            
0031fe   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003200   500b     MOVF      0xb,0x0,0x0                                                                                     
                                           			                                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
003202   ec77     CALL      0x38ee,0x0     		heartbeat = tickGet();                                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
003204   f01c                                                                                                               
003206   c004     MOVFF     0x4,0x60                                                                                        
003208   f060                                                                                                               
00320a   c005     MOVFF     0x5,0x61                                                                                        
00320c   f061                                                                                                               
00320e   c006     MOVFF     0x6,0x62                                                                                        
003210   f062                                                                                                               
003212   c007     MOVFF     0x7,0x63                                                                                        
003214   f063                                                                                                               
                                           	}                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
003216   0012     RETURN    0x0            }                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           /*                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Function: canGetPacket                                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Input:	none                                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Output: none                                                                   F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Pre-conditions: a call to canISR and an packet is available and banked to RXB0 F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Affects: Calls canParse() function in main for parsing received packet.        F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           */                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
003218   cfd9     MOVFF     0xfd9,0xfe6    void canGetPacket()                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
00321a   ffe6                                                                                                               
00321c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00321e   ffd9                                                                                                               
003220   0e11     MOVLW     0x11                                                                                            
003222   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		CAN_PACKET cp;                                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		//RXB0SIDH 28 27 26 25 24 23 22 21                                             F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                   //RXB0SIDL 20 19 18 xx xx xx 17 16                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                   //RXB0EIDH 15 14 13 12 11 10 09 08                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                   //RXB0EIDL 07 06 05 04 03 02 01 00                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003224   0e06     MOVLW     0x6            		cp.type = ((RXB0SIDH&0xC)>>6);                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
003226   6e0b     MOVWF     0xb,0x0                                                                                         
003228   0e0c     MOVLW     0xc                                                                                             
00322a   1461     ANDWF     0x61,0x0,0x0                                                                                    
00322c   c00b     MOVFF     0xb,0xfe7                                                                                       
00322e   ffe7                                                                                                               
003230   52e7     MOVF      0xe7,0x1,0x0                                                                                    
003232   e004     BZ        0x323c                                                                                          
003234   42e8     RRNCF     0xe8,0x1,0x0                                                                                    
003236   0b7f     ANDLW     0x7f                                                                                            
003238   06e7     DECF      0xe7,0x1,0x0                                                                                    
00323a   e1fc     BNZ       0x3234                                                                                          
00323c   6edf     MOVWF     0xdf,0x0                                                                                        
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
00323e   50df     MOVF      0xdf,0x0,0x0   		if (cp.type==ptBOOT)                                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
003240   e122     BNZ       0x3286                                                                                          
                                           		{                                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
003242   0e38     MOVLW     0x38           			cp.boot.type  = ((RXB0SIDH&0x38)>>3);                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
003244   1461     ANDWF     0x61,0x0,0x0                                                                                    
003246   40e8     RRNCF     0xe8,0x0,0x0                                                                                    
003248   40e8     RRNCF     0xe8,0x0,0x0                                                                                    
00324a   40e8     RRNCF     0xe8,0x0,0x0                                                                                    
00324c   0b1f     ANDLW     0x1f                                                                                            
00324e   6ee7     MOVWF     0xe7,0x0                                                                                        
003250   0e04     MOVLW     0x4                                                                                             
003252   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003254   ffdb                                                                                                               
003256   0e03     MOVLW     0x3            			cp.boot.offset= ((RXB0SIDH&0x7)<<5)+((RXB0SIDL&0xE0)>>3)+(RXB0SIDL&0x3);      F:\MCP\projects\CAN\canBase\Source\CAN.c
003258   1462     ANDWF     0x62,0x0,0x0                                                                                    
00325a   6e0c     MOVWF     0xc,0x0                                                                                         
00325c   0ee0     MOVLW     0xe0                                                                                            
00325e   1462     ANDWF     0x62,0x0,0x0                                                                                    
003260   40e8     RRNCF     0xe8,0x0,0x0                                                                                    
003262   40e8     RRNCF     0xe8,0x0,0x0                                                                                    
003264   40e8     RRNCF     0xe8,0x0,0x0                                                                                    
003266   0b1f     ANDLW     0x1f                                                                                            
003268   6e0b     MOVWF     0xb,0x0                                                                                         
00326a   0e07     MOVLW     0x7                                                                                             
00326c   1461     ANDWF     0x61,0x0,0x0                                                                                    
00326e   0d20     MULLW     0x20                                                                                            
003270   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003272   240b     ADDWF     0xb,0x0,0x0                                                                                     
003274   240c     ADDWF     0xc,0x0,0x0                                                                                     
003276   6ee7     MOVWF     0xe7,0x0                                                                                        
003278   0e05     MOVLW     0x5                                                                                             
00327a   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
00327c   ffdb                                                                                                               
00327e   0e06     MOVLW     0x6            			cp.boot.rid   = RXB0EIDH;                                                     F:\MCP\projects\CAN\canBase\Source\CAN.c
003280   cf63     MOVFF     0xf63,0xfdb                                                                                     
003282   ffdb                                                                                                               
                                           		}                                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
003284   d039     BRA       0x32f8         		else                                                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		{                                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
003286   0e3c     MOVLW     0x3c           			cp.pgm.class= ((RXB0SIDH&0x3C)>>2);                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
003288   1461     ANDWF     0x61,0x0,0x0                                                                                    
00328a   40e8     RRNCF     0xe8,0x0,0x0                                                                                    
00328c   40e8     RRNCF     0xe8,0x0,0x0                                                                                    
00328e   0b3f     ANDLW     0x3f                                                                                            
003290   6ee7     MOVWF     0xe7,0x0                                                                                        
003292   0e01     MOVLW     0x1                                                                                             
003294   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003296   ffdb                                                                                                               
003298   0e03     MOVLW     0x3            			cp.pgm.id   = (((WORD)RXB0SIDH&0x3)<<13)+(((WORD)RXB0SIDL&0xE0)<<5)+((RXB0SIDL&0x3)<<8)+RXB0EIDH; F:\MCP\projects\CAN\canBase\Source\CAN.c
00329a   1461     ANDWF     0x61,0x0,0x0                                                                                    
00329c   6e11     MOVWF     0x11,0x0                                                                                        
00329e   6a12     CLRF      0x12,0x0                                                                                        
0032a0   3811     SWAPF     0x11,0x0,0x0                                                                                    
0032a2   6a11     CLRF      0x11,0x0                                                                                        
0032a4   34e8     RLCF      0xe8,0x0,0x0                                                                                    
0032a6   0be0     ANDLW     0xe0                                                                                            
0032a8   6e12     MOVWF     0x12,0x0                                                                                        
0032aa   0ee0     MOVLW     0xe0                                                                                            
0032ac   1462     ANDWF     0x62,0x0,0x0                                                                                    
0032ae   6e13     MOVWF     0x13,0x0                                                                                        
0032b0   6a14     CLRF      0x14,0x0                                                                                        
0032b2   0e05     MOVLW     0x5                                                                                             
0032b4   90d8     BCF       0xd8,0x0,0x0                                                                                    
0032b6   3613     RLCF      0x13,0x1,0x0                                                                                    
0032b8   3614     RLCF      0x14,0x1,0x0                                                                                    
0032ba   04e8     DECF      0xe8,0x0,0x0                                                                                    
0032bc   e1fb     BNZ       0x32b4                                                                                          
0032be   5011     MOVF      0x11,0x0,0x0                                                                                    
0032c0   2413     ADDWF     0x13,0x0,0x0                                                                                    
0032c2   6e0f     MOVWF     0xf,0x0                                                                                         
0032c4   5012     MOVF      0x12,0x0,0x0                                                                                    
0032c6   2014     ADDWFC    0x14,0x0,0x0                                                                                    
0032c8   6e10     MOVWF     0x10,0x0                                                                                        
0032ca   0e03     MOVLW     0x3                                                                                             
0032cc   1462     ANDWF     0x62,0x0,0x0                                                                                    
0032ce   0e00     MOVLW     0x0                                                                                             
0032d0   50f3     MOVF      0xf3,0x0,0x0                                                                                    
0032d2   0100     MOVLB     0x0                                                                                             
0032d4   240f     ADDWF     0xf,0x0,0x0                                                                                     
0032d6   6e0d     MOVWF     0xd,0x0                                                                                         
0032d8   0e00     MOVLW     0x0                                                                                             
0032da   2010     ADDWFC    0x10,0x0,0x0                                                                                    
0032dc   6e0e     MOVWF     0xe,0x0                                                                                         
0032de   5063     MOVF      0x63,0x0,0x0                                                                                    
0032e0   0100     MOVLB     0x0                                                                                             
0032e2   240d     ADDWF     0xd,0x0,0x0                                                                                     
0032e4   6e0b     MOVWF     0xb,0x0                                                                                         
0032e6   0e00     MOVLW     0x0                                                                                             
0032e8   200e     ADDWFC    0xe,0x0,0x0                                                                                     
0032ea   6e0c     MOVWF     0xc,0x0                                                                                         
0032ec   0e02     MOVLW     0x2                                                                                             
0032ee   c00b     MOVFF     0xb,0xfdb                                                                                       
0032f0   ffdb                                                                                                               
0032f2   0e03     MOVLW     0x3                                                                                             
0032f4   c00c     MOVFF     0xc,0xfdb                                                                                       
0032f6   ffdb                                                                                                               
                                           		}                                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
0032f8   0e07     MOVLW     0x7            		cp.sid   = RXB0EIDL;                                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
0032fa   cf64     MOVFF     0xf64,0xfdb                                                                                     
0032fc   ffdb                                                                                                               
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		// Data length                                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
0032fe   5065     MOVF      0x65,0x0,0x0   		cp.length=(RXB0DLCbits.DLC3<<3)+(RXB0DLCbits.DLC2<<2)+(RXB0DLCbits.DLC1<<1)+RXB0DLCbits.DLC0; F:\MCP\projects\CAN\canBase\Source\CAN.c
003300   0b01     ANDLW     0x1                                                                                             
003302   6e0d     MOVWF     0xd,0x0                                                                                         
003304   5065     MOVF      0x65,0x0,0x0                                                                                    
003306   0b02     ANDLW     0x2                                                                                             
003308   e001     BZ        0x330c                                                                                          
00330a   0e01     MOVLW     0x1                                                                                             
00330c   24e8     ADDWF     0xe8,0x0,0x0                                                                                    
00330e   6e0c     MOVWF     0xc,0x0                                                                                         
003310   5065     MOVF      0x65,0x0,0x0                                                                                    
003312   0b04     ANDLW     0x4                                                                                             
003314   e001     BZ        0x3318                                                                                          
003316   0e01     MOVLW     0x1                                                                                             
003318   0d04     MULLW     0x4                                                                                             
00331a   cff3     MOVFF     0xff3,0xb                                                                                       
00331c   f00b                                                                                                               
00331e   5065     MOVF      0x65,0x0,0x0                                                                                    
003320   0b08     ANDLW     0x8                                                                                             
003322   e001     BZ        0x3326                                                                                          
003324   0e01     MOVLW     0x1                                                                                             
003326   0d08     MULLW     0x8                                                                                             
003328   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00332a   240b     ADDWF     0xb,0x0,0x0                                                                                     
00332c   240c     ADDWF     0xc,0x0,0x0                                                                                     
00332e   240d     ADDWF     0xd,0x0,0x0                                                                                     
003330   6ee7     MOVWF     0xe7,0x0                                                                                        
003332   0e08     MOVLW     0x8                                                                                             
003334   cfe7     MOVFF     0xfe7,0xfdb                                                                                     
003336   ffdb                                                                                                               
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		// Data one bye one, for speed                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
003338   0e09     MOVLW     0x9            		cp.data[0]=RXB0D0;	cp.data[1]=RXB0D1;                                          F:\MCP\projects\CAN\canBase\Source\CAN.c
00333a   cf66     MOVFF     0xf66,0xfdb                                                                                     
00333c   ffdb                                                                                                               
00333e   0e0a     MOVLW     0xa                                                                                             
003340   cf67     MOVFF     0xf67,0xfdb                                                                                     
003342   ffdb                                                                                                               
003344   0e0b     MOVLW     0xb            		cp.data[2]=RXB0D2; 	cp.data[3]=RXB0D3;                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
003346   cf68     MOVFF     0xf68,0xfdb                                                                                     
003348   ffdb                                                                                                               
00334a   0e0c     MOVLW     0xc                                                                                             
00334c   cf69     MOVFF     0xf69,0xfdb                                                                                     
00334e   ffdb                                                                                                               
003350   0e0d     MOVLW     0xd            		cp.data[4]=RXB0D4; 	cp.data[5]=RXB0D5;                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
003352   cf6a     MOVFF     0xf6a,0xfdb                                                                                     
003354   ffdb                                                                                                               
003356   0e0e     MOVLW     0xe                                                                                             
003358   cf6b     MOVFF     0xf6b,0xfdb                                                                                     
00335a   ffdb                                                                                                               
00335c   0e0f     MOVLW     0xf            		cp.data[6]=RXB0D6; 	cp.data[7]=RXB0D7;                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
00335e   cf6c     MOVFF     0xf6c,0xfdb                                                                                     
003360   ffdb                                                                                                               
003362   0e10     MOVLW     0x10                                                                                            
003364   cf6d     MOVFF     0xf6d,0xfdb                                                                                     
003366   ffdb                                                                                                               
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		// Clear ful status                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003368   9e60     BCF       0x60,0x7,0x0   		RXB0CONbits.RXFUL=0;                                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		// Check if bootloader request specific.                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		// reset and id change                                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
00336a   50df     MOVF      0xdf,0x0,0x0   		if (cp.type==ptBOOT)                                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
00336c   e160     BNZ       0x342e                                                                                          
                                           		{                                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
00336e   0e06     MOVLW     0x6            			if (cp.boot.rid==MY_ID)                                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
003370   50db     MOVF      0xdb,0x0,0x0                                                                                    
003372   6e0b     MOVWF     0xb,0x0                                                                                         
003374   6a0c     CLRF      0xc,0x0                                                                                         
003376   0100     MOVLB     0x0                                                                                             
003378   5195     MOVF      0x95,0x0,0x1                                                                                    
00337a   180b     XORWF     0xb,0x0,0x0                                                                                     
00337c   e102     BNZ       0x3382                                                                                          
00337e   5196     MOVF      0x96,0x0,0x1                                                                                    
003380   180c     XORWF     0xc,0x0,0x0                                                                                     
003382   e155     BNZ       0x342e                                                                                          
                                           			{                                                                             F:\MCP\projects\CAN\canBase\Source\CAN.c
003384   0e04     MOVLW     0x4            				if (cp.boot.type==btADDR) Reset(); // Reset me.                              F:\MCP\projects\CAN\canBase\Source\CAN.c
003386   50db     MOVF      0xdb,0x0,0x0                                                                                    
003388   e101     BNZ       0x338c                                                                                          
00338a   00ff     RESET                                                                                                     
00338c   0e04     MOVLW     0x4            				if (cp.boot.type==btCHANGEID)                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
00338e   50db     MOVF      0xdb,0x0,0x0                                                                                    
003390   0807     SUBLW     0x7                                                                                             
003392   e14d     BNZ       0x342e                                                                                          
                                           				{                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           						// Change my ID and NID                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
003394   0e09     MOVLW     0x9            						MY_ID=cp.data[0];                                                          F:\MCP\projects\CAN\canBase\Source\CAN.c
003396   50db     MOVF      0xdb,0x0,0x0                                                                                    
003398   0100     MOVLB     0x0                                                                                             
00339a   6f95     MOVWF     0x95,0x1                                                                                        
00339c   6b96     CLRF      0x96,0x1                                                                                        
00339e   0e09     MOVLW     0x9            						EEWrite(NODE_ID_EE+1,cp.data[0]);                                          F:\MCP\projects\CAN\canBase\Source\CAN.c
0033a0   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
0033a2   ffe6                                                                                                               
0033a4   0e01     MOVLW     0x1                                                                                             
0033a6   6ee6     MOVWF     0xe6,0x0                                                                                        
0033a8   6ae6     CLRF      0xe6,0x0                                                                                        
0033aa   eced     CALL      0x37da,0x0                                                                                      
0033ac   f01b                                                                                                               
0033ae   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0033b0   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0033b2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0033b4   0e2a     MOVLW     0x2a           						EEWrite(NODE_ID_EE,NODE_HAS_ID);                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
0033b6   6ee6     MOVWF     0xe6,0x0                                                                                        
0033b8   0e00     MOVLW     0x0                                                                                             
0033ba   6ee6     MOVWF     0xe6,0x0                                                                                        
0033bc   6ae6     CLRF      0xe6,0x0                                                                                        
0033be   eced     CALL      0x37da,0x0                                                                                      
0033c0   f01b                                                                                                               
0033c2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0033c4   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0033c6   52e5     MOVF      0xe5,0x1,0x0                                                                                    
                                           						// Send ack with new id.                                                   F:\MCP\projects\CAN\canBase\Source\CAN.c
0033c8   0100     MOVLB     0x0            						outCp.type=ptBOOT;                                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
0033ca   6b64     CLRF      0x64,0x1                                                                                        
0033cc   0100     MOVLB     0x0            						outCp.boot.type=btACK;                                                     F:\MCP\projects\CAN\canBase\Source\CAN.c
0033ce   0e04     MOVLW     0x4                                                                                             
0033d0   6f68     MOVWF     0x68,0x1                                                                                        
0033d2   0100     MOVLB     0x0            						outCp.length=0;                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
0033d4   6b6c     CLRF      0x6c,0x1                                                                                        
0033d6   0e02     MOVLW     0x2            						while(!canSendMessage(outCp,PRIO_HIGH));                                   F:\MCP\projects\CAN\canBase\Source\CAN.c
0033d8   6ee6     MOVWF     0xe6,0x0                                                                                        
0033da   c064     MOVFF     0x64,0xfe6                                                                                      
0033dc   ffe6                                                                                                               
0033de   c065     MOVFF     0x65,0xfe6                                                                                      
0033e0   ffe6                                                                                                               
0033e2   c066     MOVFF     0x66,0xfe6                                                                                      
0033e4   ffe6                                                                                                               
0033e6   c067     MOVFF     0x67,0xfe6                                                                                      
0033e8   ffe6                                                                                                               
0033ea   c068     MOVFF     0x68,0xfe6                                                                                      
0033ec   ffe6                                                                                                               
0033ee   c069     MOVFF     0x69,0xfe6                                                                                      
0033f0   ffe6                                                                                                               
0033f2   c06a     MOVFF     0x6a,0xfe6                                                                                      
0033f4   ffe6                                                                                                               
0033f6   c06b     MOVFF     0x6b,0xfe6                                                                                      
0033f8   ffe6                                                                                                               
0033fa   c06c     MOVFF     0x6c,0xfe6                                                                                      
0033fc   ffe6                                                                                                               
0033fe   c06d     MOVFF     0x6d,0xfe6                                                                                      
003400   ffe6                                                                                                               
003402   c06e     MOVFF     0x6e,0xfe6                                                                                      
003404   ffe6                                                                                                               
003406   c06f     MOVFF     0x6f,0xfe6                                                                                      
003408   ffe6                                                                                                               
00340a   c070     MOVFF     0x70,0xfe6                                                                                      
00340c   ffe6                                                                                                               
00340e   c071     MOVFF     0x71,0xfe6                                                                                      
003410   ffe6                                                                                                               
003412   c072     MOVFF     0x72,0xfe6                                                                                      
003414   ffe6                                                                                                               
003416   c073     MOVFF     0x73,0xfe6                                                                                      
003418   ffe6                                                                                                               
00341a   c074     MOVFF     0x74,0xfe6                                                                                      
00341c   ffe6                                                                                                               
00341e   d83f     RCALL     0x349e                                                                                          
003420   6e0b     MOVWF     0xb,0x0                                                                                         
003422   0e12     MOVLW     0x12                                                                                            
003424   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003426   500b     MOVF      0xb,0x0,0x0                                                                                     
003428   0900     IORLW     0x0                                                                                             
00342a   e101     BNZ       0x342e                                                                                          
00342c   d7d4     BRA       0x33d6                                                                                          
                                           				}                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           			}                                                                             F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		}                                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           		//Call main parser                                                             F:\MCP\projects\CAN\canBase\Source\CAN.c
00342e   04df     DECF      0xdf,0x0,0x0   		if (cp.type==ptPGM) canParse(cp);                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
003430   e12c     BNZ       0x348a                                                                                          
003432   cfd9     MOVFF     0xfd9,0xfe9                                                                                     
003434   ffe9                                                                                                               
003436   cfda     MOVFF     0xfda,0xfea                                                                                     
003438   ffea                                                                                                               
00343a   cfee     MOVFF     0xfee,0xfe6                                                                                     
00343c   ffe6                                                                                                               
00343e   cfee     MOVFF     0xfee,0xfe6                                                                                     
003440   ffe6                                                                                                               
003442   cfee     MOVFF     0xfee,0xfe6                                                                                     
003444   ffe6                                                                                                               
003446   cfee     MOVFF     0xfee,0xfe6                                                                                     
003448   ffe6                                                                                                               
00344a   cfee     MOVFF     0xfee,0xfe6                                                                                     
00344c   ffe6                                                                                                               
00344e   cfee     MOVFF     0xfee,0xfe6                                                                                     
003450   ffe6                                                                                                               
003452   cfee     MOVFF     0xfee,0xfe6                                                                                     
003454   ffe6                                                                                                               
003456   cfee     MOVFF     0xfee,0xfe6                                                                                     
003458   ffe6                                                                                                               
00345a   cfee     MOVFF     0xfee,0xfe6                                                                                     
00345c   ffe6                                                                                                               
00345e   cfee     MOVFF     0xfee,0xfe6                                                                                     
003460   ffe6                                                                                                               
003462   cfee     MOVFF     0xfee,0xfe6                                                                                     
003464   ffe6                                                                                                               
003466   cfee     MOVFF     0xfee,0xfe6                                                                                     
003468   ffe6                                                                                                               
00346a   cfee     MOVFF     0xfee,0xfe6                                                                                     
00346c   ffe6                                                                                                               
00346e   cfee     MOVFF     0xfee,0xfe6                                                                                     
003470   ffe6                                                                                                               
003472   cfee     MOVFF     0xfee,0xfe6                                                                                     
003474   ffe6                                                                                                               
003476   cfee     MOVFF     0xfee,0xfe6                                                                                     
003478   ffe6                                                                                                               
00347a   cfee     MOVFF     0xfee,0xfe6                                                                                     
00347c   ffe6                                                                                                               
00347e   ecc0     CALL      0x3780,0x0                                                                                      
003480   f01b                                                                                                               
003482   6e0b     MOVWF     0xb,0x0                                                                                         
003484   0e11     MOVLW     0x11                                                                                            
003486   5ee1     SUBWF     0xe1,0x1,0x0                                                                                    
003488   500b     MOVF      0xb,0x0,0x0                                                                                     
00348a   0e11     MOVLW     0x11           }                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
00348c   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
00348e   e202     BC        0x3494                                                                                          
003490   6ae1     CLRF      0xe1,0x0                                                                                        
003492   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003494   6ee1     MOVWF     0xe1,0x0                                                                                        
003496   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003498   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00349a   ffd9                                                                                                               
00349c   0012     RETURN    0x0                                                                                             
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           /*                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Function: canSendMessage                                                       F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Input:	CAN_MESSAGE to send                                                     F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Output: True if packet scheduled sucess, false otherwise.                      F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Pre-conditions: canInit                                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Affects: ..                                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           *	Depends: ..                                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           */                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
00349e   cfd9     MOVFF     0xfd9,0xfe6    BOOL canSendMessage(CAN_PACKET cp, CAN_PRIORITY prio)                            F:\MCP\projects\CAN\canBase\Source\CAN.c
0034a0   ffe6                                                                                                               
0034a2   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0034a4   ffd9                                                                                                               
                                           {                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
0034a6   010f     MOVLB     0xf            	if ( TXB0CONbits.TXREQ == 0 )  { ECANCON=(ECANCON&0b00000)|0b00011; }           F:\MCP\projects\CAN\canBase\Source\CAN.c
0034a8   b740     BTFSC     0x40,0x3,0x1                                                                                    
0034aa   d004     BRA       0x34b4                                                                                          
0034ac   0e00     MOVLW     0x0                                                                                             
0034ae   1477     ANDWF     0x77,0x0,0x0                                                                                    
0034b0   0903     IORLW     0x3                                                                                             
0034b2   6e77     MOVWF     0x77,0x0                                                                                        
0034b4   010f     MOVLB     0xf            	if ( TXB1CONbits.TXREQ == 0 )  { ECANCON=(ECANCON&0b00000)|0b00100; }           F:\MCP\projects\CAN\canBase\Source\CAN.c
0034b6   b730     BTFSC     0x30,0x3,0x1                                                                                    
0034b8   d004     BRA       0x34c2                                                                                          
0034ba   0e00     MOVLW     0x0                                                                                             
0034bc   1477     ANDWF     0x77,0x0,0x0                                                                                    
0034be   0904     IORLW     0x4                                                                                             
0034c0   6e77     MOVWF     0x77,0x0                                                                                        
0034c2   010f     MOVLB     0xf            	if ( TXB2CONbits.TXREQ == 0 )  { ECANCON=(ECANCON&0b00000)|0b00101; }           F:\MCP\projects\CAN\canBase\Source\CAN.c
0034c4   b720     BTFSC     0x20,0x3,0x1                                                                                    
0034c6   d005     BRA       0x34d2                                                                                          
0034c8   0e00     MOVLW     0x0                                                                                             
0034ca   1477     ANDWF     0x77,0x0,0x0                                                                                    
0034cc   0905     IORLW     0x5                                                                                             
0034ce   6e77     MOVWF     0x77,0x0                                                                                        
                                           	// None of the transmit buffers were empty.                                     F:\MCP\projects\CAN\canBase\Source\CAN.c
0034d0   d002     BRA       0x34d6         	else { return FALSE;}                                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
0034d2   0e00     MOVLW     0x0                                                                                             
0034d4   d0bd     BRA       0x3650                                                                                          
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
0034d6   0eed     MOVLW     0xed           	if (prio<0 || prio>3) prio = 0;                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
0034d8   cfdb     MOVFF     0xfdb,0xb                                                                                       
0034da   f00b                                                                                                               
0034dc   340b     RLCF      0xb,0x0,0x0                                                                                     
0034de   e20e     BC        0x34fc                                                                                          
0034e0   0eed     MOVLW     0xed                                                                                            
0034e2   cfdb     MOVFF     0xfdb,0xc                                                                                       
0034e4   f00c                                                                                                               
0034e6   0e03     MOVLW     0x3                                                                                             
0034e8   6ee7     MOVWF     0xe7,0x0                                                                                        
0034ea   180c     XORWF     0xc,0x0,0x0                                                                                     
0034ec   aee8     BTFSS     0xe8,0x7,0x0                                                                                    
0034ee   d002     BRA       0x34f4                                                                                          
0034f0   340c     RLCF      0xc,0x0,0x0                                                                                     
0034f2   d003     BRA       0x34fa                                                                                          
0034f4   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0034f6   80d8     BSF       0xd8,0x0,0x0                                                                                    
0034f8   540c     SUBFWB    0xc,0x0,0x0                                                                                     
0034fa   e202     BC        0x3500                                                                                          
0034fc   0eed     MOVLW     0xed                                                                                            
0034fe   6adb     CLRF      0xdb,0x0                                                                                        
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//RXB0SIDH 28 27 26 25 24 23 22 21                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//RXB0SIDL 20 19 18 xx xx xx 17 16                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//RXB0EIDH 15 14 13 12 11 10 09 08                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	//RXB0EIDL 07 06 05 04 03 02 01 00                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003500   0eee     MOVLW     0xee           	if (cp.type==ptBOOT)                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003502   50db     MOVF      0xdb,0x0,0x0                                                                                    
003504   e124     BNZ       0x354e                                                                                          
                                           	{                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
003506   0ef3     MOVLW     0xf3           		RXB0SIDH = ((cp.type&0x3)<<6)+((cp.boot.type&0x7)<<3)+((cp.boot.offset&0xE0)>>5); F:\MCP\projects\CAN\canBase\Source\CAN.c
003508   50db     MOVF      0xdb,0x0,0x0                                                                                    
00350a   0be0     ANDLW     0xe0                                                                                            
00350c   0be0     ANDLW     0xe0                                                                                            
00350e   38e8     SWAPF     0xe8,0x0,0x0                                                                                    
003510   40e8     RRNCF     0xe8,0x0,0x0                                                                                    
003512   6e0c     MOVWF     0xc,0x0                                                                                         
003514   0ef2     MOVLW     0xf2                                                                                            
003516   50db     MOVF      0xdb,0x0,0x0                                                                                    
003518   0b07     ANDLW     0x7                                                                                             
00351a   0d08     MULLW     0x8                                                                                             
00351c   cff3     MOVFF     0xff3,0xb                                                                                       
00351e   f00b                                                                                                               
003520   0eee     MOVLW     0xee                                                                                            
003522   50db     MOVF      0xdb,0x0,0x0                                                                                    
003524   0b03     ANDLW     0x3                                                                                             
003526   0d40     MULLW     0x40                                                                                            
003528   50f3     MOVF      0xf3,0x0,0x0                                                                                    
00352a   240b     ADDWF     0xb,0x0,0x0                                                                                     
00352c   240c     ADDWF     0xc,0x0,0x0                                                                                     
00352e   6e61     MOVWF     0x61,0x0                                                                                        
003530   0ef3     MOVLW     0xf3           		RXB0SIDL = ((cp.boot.offset&0x1C)<<3)+(cp.boot.offset&0x3);                    F:\MCP\projects\CAN\canBase\Source\CAN.c
003532   50db     MOVF      0xdb,0x0,0x0                                                                                    
003534   0b03     ANDLW     0x3                                                                                             
003536   6e0b     MOVWF     0xb,0x0                                                                                         
003538   0ef3     MOVLW     0xf3                                                                                            
00353a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00353c   0b1c     ANDLW     0x1c                                                                                            
00353e   0d08     MULLW     0x8                                                                                             
003540   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003542   240b     ADDWF     0xb,0x0,0x0                                                                                     
003544   6e62     MOVWF     0x62,0x0                                                                                        
003546   0ef4     MOVLW     0xf4           		RXB0EIDH = cp.boot.rid;                                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
003548   50db     MOVF      0xdb,0x0,0x0                                                                                    
00354a   6e63     MOVWF     0x63,0x0                                                                                        
                                           	}                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
00354c   d04f     BRA       0x35ec         	else                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	{                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
00354e   0eef     MOVLW     0xef           		RXB0SIDH = ((cp.type&0x3)<<6)+((cp.pgm.class&0xF)<<2)+((cp.pgm.id&0x6000)>>13); F:\MCP\projects\CAN\canBase\Source\CAN.c
003550   50db     MOVF      0xdb,0x0,0x0                                                                                    
003552   0b0f     ANDLW     0xf                                                                                             
003554   0d04     MULLW     0x4                                                                                             
003556   cff3     MOVFF     0xff3,0xd                                                                                       
003558   f00d                                                                                                               
00355a   0eee     MOVLW     0xee                                                                                            
00355c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00355e   0b03     ANDLW     0x3                                                                                             
003560   0d40     MULLW     0x40                                                                                            
003562   50f3     MOVF      0xf3,0x0,0x0                                                                                    
003564   240d     ADDWF     0xd,0x0,0x0                                                                                     
003566   6e0b     MOVWF     0xb,0x0                                                                                         
003568   6a0c     CLRF      0xc,0x0                                                                                         
00356a   be0b     BTFSC     0xb,0x7,0x0                                                                                     
00356c   680c     SETF      0xc,0x0                                                                                         
00356e   0ef0     MOVLW     0xf0                                                                                            
003570   cfdb     MOVFF     0xfdb,0xe                                                                                       
003572   f00e                                                                                                               
003574   0ef1     MOVLW     0xf1                                                                                            
003576   cfdb     MOVFF     0xfdb,0xf                                                                                       
003578   f00f                                                                                                               
00357a   0e00     MOVLW     0x0                                                                                             
00357c   160e     ANDWF     0xe,0x1,0x0                                                                                     
00357e   0e60     MOVLW     0x60                                                                                            
003580   160f     ANDWF     0xf,0x1,0x0                                                                                     
003582   380f     SWAPF     0xf,0x0,0x0                                                                                     
003584   6a0f     CLRF      0xf,0x0                                                                                         
003586   30e8     RRCF      0xe8,0x0,0x0                                                                                    
003588   0b07     ANDLW     0x7                                                                                             
00358a   6e0e     MOVWF     0xe,0x0                                                                                         
00358c   500b     MOVF      0xb,0x0,0x0                                                                                     
00358e   240e     ADDWF     0xe,0x0,0x0                                                                                     
003590   6e61     MOVWF     0x61,0x0                                                                                        
003592   0ef0     MOVLW     0xf0           		RXB0SIDL = ((cp.pgm.id&0x1C00)>>5)+((cp.pgm.id&0x300)>>8);                     F:\MCP\projects\CAN\canBase\Source\CAN.c
003594   cfdb     MOVFF     0xfdb,0xb                                                                                       
003596   f00b                                                                                                               
003598   0ef1     MOVLW     0xf1                                                                                            
00359a   cfdb     MOVFF     0xfdb,0xc                                                                                       
00359c   f00c                                                                                                               
00359e   0e00     MOVLW     0x0                                                                                             
0035a0   160b     ANDWF     0xb,0x1,0x0                                                                                     
0035a2   0e1c     MOVLW     0x1c                                                                                            
0035a4   160c     ANDWF     0xc,0x1,0x0                                                                                     
0035a6   0e05     MOVLW     0x5                                                                                             
0035a8   90d8     BCF       0xd8,0x0,0x0                                                                                    
0035aa   320c     RRCF      0xc,0x1,0x0                                                                                     
0035ac   320b     RRCF      0xb,0x1,0x0                                                                                     
0035ae   04e8     DECF      0xe8,0x0,0x0                                                                                    
0035b0   e1fb     BNZ       0x35a8                                                                                          
0035b2   0ef0     MOVLW     0xf0                                                                                            
0035b4   cfdb     MOVFF     0xfdb,0xd                                                                                       
0035b6   f00d                                                                                                               
0035b8   0ef1     MOVLW     0xf1                                                                                            
0035ba   cfdb     MOVFF     0xfdb,0xe                                                                                       
0035bc   f00e                                                                                                               
0035be   0e00     MOVLW     0x0                                                                                             
0035c0   160d     ANDWF     0xd,0x1,0x0                                                                                     
0035c2   0e03     MOVLW     0x3                                                                                             
0035c4   160e     ANDWF     0xe,0x1,0x0                                                                                     
0035c6   c00e     MOVFF     0xe,0xd                                                                                         
0035c8   f00d                                                                                                               
0035ca   6a0e     CLRF      0xe,0x0                                                                                         
0035cc   500b     MOVF      0xb,0x0,0x0                                                                                     
0035ce   240d     ADDWF     0xd,0x0,0x0                                                                                     
0035d0   6e62     MOVWF     0x62,0x0                                                                                        
0035d2   0eff     MOVLW     0xff           		RXB0EIDH = (cp.pgm.id&0xFF);                                                   F:\MCP\projects\CAN\canBase\Source\CAN.c
0035d4   6ee7     MOVWF     0xe7,0x0                                                                                        
0035d6   0ef0     MOVLW     0xf0                                                                                            
0035d8   cfdb     MOVFF     0xfdb,0xb                                                                                       
0035da   f00b                                                                                                               
0035dc   0ef1     MOVLW     0xf1                                                                                            
0035de   cfdb     MOVFF     0xfdb,0xc                                                                                       
0035e0   f00c                                                                                                               
0035e2   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0035e4   160b     ANDWF     0xb,0x1,0x0                                                                                     
0035e6   6a0c     CLRF      0xc,0x0                                                                                         
0035e8   500b     MOVF      0xb,0x0,0x0                                                                                     
0035ea   6e63     MOVWF     0x63,0x0                                                                                        
                                           	}                                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
0035ec   c095     MOVFF     0x95,0xf64     	RXB0EIDL = MY_ID;                                                               F:\MCP\projects\CAN\canBase\Source\CAN.c
0035ee   ff64                                                                                                               
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Data length                                                                  F:\MCP\projects\CAN\canBase\Source\CAN.c
0035f0   6a65     CLRF      0x65,0x0       	RXB0DLC = 0;                                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
0035f2   0ef6     MOVLW     0xf6           	if (cp.length>8) RXB0DLC=8; else RXB0DLC=cp.length;                             F:\MCP\projects\CAN\canBase\Source\CAN.c
0035f4   50db     MOVF      0xdb,0x0,0x0                                                                                    
0035f6   0808     SUBLW     0x8                                                                                             
0035f8   e203     BC        0x3600                                                                                          
0035fa   0e08     MOVLW     0x8                                                                                             
0035fc   6e65     MOVWF     0x65,0x0                                                                                        
0035fe   d003     BRA       0x3606                                                                                          
003600   0ef6     MOVLW     0xf6                                                                                            
003602   50db     MOVF      0xdb,0x0,0x0                                                                                    
003604   6e65     MOVWF     0x65,0x0                                                                                        
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// NOT Remote request                                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	_asm                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003606   9c65     BCF       0x65,0x6,0x0   		bcf RXB0DLC, 6, 0                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	_endasm                                                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Data one bye one, for speed                                                  F:\MCP\projects\CAN\canBase\Source\CAN.c
003608   0ef7     MOVLW     0xf7           	RXB0D0=cp.data[0];	RXB0D1=cp.data[1];                                           F:\MCP\projects\CAN\canBase\Source\CAN.c
00360a   50db     MOVF      0xdb,0x0,0x0                                                                                    
00360c   6e66     MOVWF     0x66,0x0                                                                                        
00360e   0ef8     MOVLW     0xf8                                                                                            
003610   50db     MOVF      0xdb,0x0,0x0                                                                                    
003612   6e67     MOVWF     0x67,0x0                                                                                        
003614   0ef9     MOVLW     0xf9           	RXB0D2=cp.data[2]; 	RXB0D3=cp.data[3];                                          F:\MCP\projects\CAN\canBase\Source\CAN.c
003616   50db     MOVF      0xdb,0x0,0x0                                                                                    
003618   6e68     MOVWF     0x68,0x0                                                                                        
00361a   0efa     MOVLW     0xfa                                                                                            
00361c   50db     MOVF      0xdb,0x0,0x0                                                                                    
00361e   6e69     MOVWF     0x69,0x0                                                                                        
003620   0efb     MOVLW     0xfb           	RXB0D4=cp.data[4]; 	RXB0D5=cp.data[5];                                          F:\MCP\projects\CAN\canBase\Source\CAN.c
003622   50db     MOVF      0xdb,0x0,0x0                                                                                    
003624   6e6a     MOVWF     0x6a,0x0                                                                                        
003626   0efc     MOVLW     0xfc                                                                                            
003628   50db     MOVF      0xdb,0x0,0x0                                                                                    
00362a   6e6b     MOVWF     0x6b,0x0                                                                                        
00362c   0efd     MOVLW     0xfd           	RXB0D6=cp.data[6]; 	RXB0D7=cp.data[7];                                          F:\MCP\projects\CAN\canBase\Source\CAN.c
00362e   50db     MOVF      0xdb,0x0,0x0                                                                                    
003630   6e6c     MOVWF     0x6c,0x0                                                                                        
003632   0efe     MOVLW     0xfe                                                                                            
003634   50db     MOVF      0xdb,0x0,0x0                                                                                    
003636   6e6d     MOVWF     0x6d,0x0                                                                                        
                                           	// set extended                                                                 F:\MCP\projects\CAN\canBase\Source\CAN.c
003638   8662     BSF       0x62,0x3,0x0   	RXB0SIDLbits.EXID=1;                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// Priority                                                                     F:\MCP\projects\CAN\canBase\Source\CAN.c
00363a   0eed     MOVLW     0xed           	RXB0CON = (RXB0CON & 0b11111100) | prio;                                        F:\MCP\projects\CAN\canBase\Source\CAN.c
00363c   cfdb     MOVFF     0xfdb,0xfe6                                                                                     
00363e   ffe6                                                                                                               
003640   0efc     MOVLW     0xfc                                                                                            
003642   1460     ANDWF     0x60,0x0,0x0                                                                                    
003644   52e5     MOVF      0xe5,0x1,0x0                                                                                    
003646   10e7     IORWF     0xe7,0x0,0x0                                                                                    
003648   6e60     MOVWF     0x60,0x0                                                                                        
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	// mark as redy to transmit                                                     F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	_asm                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
00364a   8660     BSF       0x60,0x3,0x0   		bsf RXB0CON, 3, 0                                                              F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	_endasm                                                                         F:\MCP\projects\CAN\canBase\Source\CAN.c
                                           	                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
00364c   0e01     MOVLW     0x1            	return TRUE;                                                                    F:\MCP\projects\CAN\canBase\Source\CAN.c
00364e   d000     BRA       0x3650                                                                                          
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\CAN.c
003650   52e5     MOVF      0xe5,0x1,0x0   }                                                                                F:\MCP\projects\CAN\canBase\Source\CAN.c
003652   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003654   ffd9                                                                                                               
003656   0012     RETURN    0x0                                                                                             
                                           /*********************************************************************           F:\MCP\projects\CAN\canBase\Source\Tick.c
                                            *                                                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
                                            *                  Ticker module service                                        F:\MCP\projects\CAN\canBase\Source\Tick.c
                                            *                                                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
                                            *********************************************************************           F:\MCP\projects\CAN\canBase\Source\Tick.c
                                            * FileName:        $HeadURL: http://svn.arune.se/svn/HomeAutomation/trunk/EmbeddedSoftware/PIC/canBase/Source/Tick.c $ F:\MCP\projects\CAN\canBase\Source\Tick.c
                                            * Last changed:	$LastChangedDate: 2006-11-14 10:55:38 +0100 (ti, 14 nov 2006) $ F:\MCP\projects\CAN\canBase\Source\Tick.c
                                            * By:				$LastChangedBy: johboh $                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
                                            * Revision:		$Revision: 86 $                                                    F:\MCP\projects\CAN\canBase\Source\Tick.c
                                            ********************************************************************/           F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #define TICK_INCLUDE                                                             F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #include <Tick.h>                                                                F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #include <Compiler.h>                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #define TICK_TEMP_VALUE_1 ((INSTR_FREQ) / (TICKS_PER_SECOND * TICK_PRESCALE_VALUE)) F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #if TICK_TEMP_VALUE_1 > 60000                                                    F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #error TICK_PER_SECOND value cannot be programmed with current CLOCK_FREQ        F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #error Either lower TICK_PER_SECOND or manually configure the Timer              F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #endif                                                                           F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #define TICK_TEMP_VALUE         (65535 - TICK_TEMP_VALUE_1)                      F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #define TICK_COUNTER_HIGH       ((TICK_TEMP_VALUE >> 8) & 0xff)                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #define TICK_COUNTER_LOW        (TICK_TEMP_VALUE & 0xff)                         F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #if (TICK_PRESCALE_VALUE == 2)                                                   F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               #define TIMER_PRESCALE  (0)                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #elif ( TICK_PRESCALE_VALUE == 4 )                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               #define TIMER_PRESCALE  (1)                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #elif ( TICK_PRESCALE_VALUE == 8 )                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               #define TIMER_PRESCALE  (2)                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #elif ( TICK_PRESCALE_VALUE == 16 )                                              F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               #define TIMER_PRESCALE  (3)                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #elif ( TICK_PRESCALE_VALUE == 32 )                                              F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               #define TIMER_PRESCALE  (4)                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #elif ( TICK_PRESCALE_VALUE == 64 )                                              F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               #define TIMER_PRESCALE  (5)                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #elif ( TICK_PRESCALE_VALUE == 128 )                                             F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               #define TIMER_PRESCALE  (6)                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #elif ( TICK_PRESCALE_VALUE == 256 )                                             F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               #define TIMER_PRESCALE  (7)                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #else                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               #error Invalid TICK_PRESCALE_VALUE specified.                                F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #endif                                                                           F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           TICK TickCount = 0;	// 10ms/unit                                                 F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           /*                                                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Function: TickInit                                                             F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *                                                                                F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Input:	none                                                                    F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Output: Tick manager is initialized.                                           F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Pre-conditions: TickInit                                                       F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Affects: none                                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Depends: none                                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           */                                                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           #define PERIOD (INSTR_FREQ/256/1000)*TICK_PERIOD_MS                              F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           void tickInit(void)                                                              F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           {                                                                                F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               // Start the timer.                                                          F:\MCP\projects\CAN\canBase\Source\Tick.c
0038da   0e79     MOVLW     0x79               TMR0L = TICK_COUNTER_LOW;                                                    F:\MCP\projects\CAN\canBase\Source\Tick.c
0038dc   6ed6     MOVWF     0xd6,0x0                                                                                        
0038de   0efe     MOVLW     0xfe               TMR0H = TICK_COUNTER_HIGH;                                                   F:\MCP\projects\CAN\canBase\Source\Tick.c
0038e0   6ed7     MOVWF     0xd7,0x0                                                                                        
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               // 16-BIT, internal timer, PSA set to 1:256                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
0038e2   0e07     MOVLW     0x7                T0CON = 0b00000000 | TIMER_PRESCALE;                                         F:\MCP\projects\CAN\canBase\Source\Tick.c
0038e4   6ed5     MOVWF     0xd5,0x0                                                                                        
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               // Start the timer.                                                          F:\MCP\projects\CAN\canBase\Source\Tick.c
0038e6   8ed5     BSF       0xd5,0x7,0x0       T0CONbits.TMR0ON = 1;                                                        F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
0038e8   84f2     BSF       0xf2,0x2,0x0       INTCONbits.TMR0IF = 1;                                                       F:\MCP\projects\CAN\canBase\Source\Tick.c
0038ea   8af2     BSF       0xf2,0x5,0x0       INTCONbits.TMR0IE = 1;                                                       F:\MCP\projects\CAN\canBase\Source\Tick.c
0038ec   0012     RETURN    0x0            }                                                                                F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           /*                                                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Function: TickGet                                                              F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *                                                                                F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Input:	none                                                                    F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Output: Current tick value is given, 1 tick represents approximately 10ms      F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Pre-conditions: TickInit                                                       F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Affects: none                                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Depends: none                                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           */                                                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           TICK tickGet(void)                                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           {                                                                                F:\MCP\projects\CAN\canBase\Source\Tick.c
0038ee   c091     MOVFF     0x91,0x4           return TickCount;                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
0038f0   f004                                                                                                               
0038f2   c092     MOVFF     0x92,0x5                                                                                        
0038f4   f005                                                                                                               
0038f6   c093     MOVFF     0x93,0x6                                                                                        
0038f8   f006                                                                                                               
0038fa   c094     MOVFF     0x94,0x7                                                                                        
0038fc   f007                                                                                                               
0038fe   d000     BRA       0x3900                                                                                          
003900   0012     RETURN    0x0            }                                                                                F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           /*                                                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Function: tickUpdate                                                           F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *                                                                                F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Input:	none                                                                    F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Output: none                                                                   F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Pre-conditions: TickInit                                                       F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Affects: none                                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           *	Depends: none                                                                  F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           */                                                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           void tickUpdate(void)                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           {                                                                                F:\MCP\projects\CAN\canBase\Source\Tick.c
003902   a4f2     BTFSS     0xf2,0x2,0x0       if(INTCONbits.TMR0IF)                                                        F:\MCP\projects\CAN\canBase\Source\Tick.c
003904   d00b     BRA       0x391c                                                                                          
                                               {                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
003906   0efe     MOVLW     0xfe                   TMR0H = TICK_COUNTER_HIGH;                                               F:\MCP\projects\CAN\canBase\Source\Tick.c
003908   6ed7     MOVWF     0xd7,0x0                                                                                        
00390a   0e79     MOVLW     0x79                   TMR0L = TICK_COUNTER_LOW;                                                F:\MCP\projects\CAN\canBase\Source\Tick.c
00390c   6ed6     MOVWF     0xd6,0x0                                                                                        
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
00390e   0100     MOVLB     0x0                    TickCount++;                                                             F:\MCP\projects\CAN\canBase\Source\Tick.c
003910   2b91     INCF      0x91,0x1,0x1                                                                                    
003912   0e00     MOVLW     0x0                                                                                             
003914   2392     ADDWFC    0x92,0x1,0x1                                                                                    
003916   2393     ADDWFC    0x93,0x1,0x1                                                                                    
003918   2394     ADDWFC    0x94,0x1,0x1                                                                                    
                                                                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
00391a   94f2     BCF       0xf2,0x2,0x0           INTCONbits.TMR0IF = 0;                                                   F:\MCP\projects\CAN\canBase\Source\Tick.c
                                               }                                                                            F:\MCP\projects\CAN\canBase\Source\Tick.c
00391c   0012     RETURN    0x0            }                                                                                F:\MCP\projects\CAN\canBase\Source\Tick.c
                                           /*********************************************************************           F:\MCP\projects\CAN\canTemp\Source\Main.c
                                            *                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                            *                  Main application                                             F:\MCP\projects\CAN\canTemp\Source\Main.c
                                            *                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                            *********************************************************************           F:\MCP\projects\CAN\canTemp\Source\Main.c
                                            * FileName:        $HeadURL: http://svn.arune.se/svn/HomeAutomation/trunk/EmbeddedSoftware/PIC/canTemp/Source/Main.c $ F:\MCP\projects\CAN\canTemp\Source\Main.c
                                            * Last changed:	$LastChangedDate: 2007-02-08 18:24:59 +0100 (to, 08 feb 2007) $ F:\MCP\projects\CAN\canTemp\Source\Main.c
                                            * By:				$LastChangedBy: johboh $                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                            * Revision:		$Revision: 297 $                                                   F:\MCP\projects\CAN\canTemp\Source\Main.c
                                            ********************************************************************/           F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #include <compiler.h>                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #include <stackTasks.h>                                                          F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #include <Tick.h>                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #include <funcdefs.h>                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #include <CAN.h>                                                                 F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #include "..\canBoot\Include\boot.h"                                             F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #ifdef USE_ADC                                                                   F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#include <adc.h>                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #endif                                                                           F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #ifdef USE_BLINDS                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#include <blinds.h>                                                             F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #endif                                                                           F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           static void mainInit(void);                                                      F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
003658   cfd9     MOVFF     0xfd9,0xfe6    void main()                                                                      F:\MCP\projects\CAN\canTemp\Source\Main.c
00365a   ffe6                                                                                                               
00365c   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
00365e   ffd9                                                                                                               
003660   0e11     MOVLW     0x11                                                                                            
003662   26e1     ADDWF     0xe1,0x1,0x0                                                                                    
                                           {                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	static TICK t = 0;                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	CAN_PACKET outCp;                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	// Inits                                                                        F:\MCP\projects\CAN\canTemp\Source\Main.c
003664   d886     RCALL     0x3772         	mainInit();                                                                     F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
003666   ec28     CALL      0x3050,0x0     	canInit();                                                                      F:\MCP\projects\CAN\canTemp\Source\Main.c
003668   f018                                                                                                               
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#ifdef USE_ADC                                                                  F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		adcInit(TRUE,0b1011);                                                          F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#endif                                                                          F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#ifdef USE_BLINDS                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		blindsInit();                                                                  F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		blindsTurn(0);                                                                 F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#else                                                                           F:\MCP\projects\CAN\canTemp\Source\Main.c
00366a   9a82     BCF       0x82,0x5,0x0   		BLINDS0P_IO=0;                                                                 F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#endif                                                                          F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
0036b4   d7db     BRA       0x366c         	while(1)                                                                        F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	{                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		static TICK t = 0;                                                             F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		static TICK temperature = 0;                                                   F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		static BOOL getNewTemperature = TRUE;                                          F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		static BYTE lastTemperature = TEMPERATURE_INSIDE;                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		static TICK blinds = 0;                                                        F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
00366c   ec77     CALL      0x38ee,0x0     		if ((tickGet()-t)>TICK_SECOND)                                                 F:\MCP\projects\CAN\canTemp\Source\Main.c
00366e   f01c                                                                                                               
003670   0100     MOVLB     0x0                                                                                             
003672   5179     MOVF      0x79,0x0,0x1                                                                                    
003674   5c04     SUBWF     0x4,0x0,0x0                                                                                     
003676   6e0b     MOVWF     0xb,0x0                                                                                         
003678   517a     MOVF      0x7a,0x0,0x1                                                                                    
00367a   5805     SUBWFB    0x5,0x0,0x0                                                                                     
00367c   6e0c     MOVWF     0xc,0x0                                                                                         
00367e   517b     MOVF      0x7b,0x0,0x1                                                                                    
003680   5806     SUBWFB    0x6,0x0,0x0                                                                                     
003682   6e0d     MOVWF     0xd,0x0                                                                                         
003684   517c     MOVF      0x7c,0x0,0x1                                                                                    
003686   5807     SUBWFB    0x7,0x0,0x0                                                                                     
003688   6e0e     MOVWF     0xe,0x0                                                                                         
00368a   80d8     BSF       0xd8,0x0,0x0                                                                                    
00368c   0e64     MOVLW     0x64                                                                                            
00368e   540b     SUBFWB    0xb,0x0,0x0                                                                                     
003690   0e00     MOVLW     0x0                                                                                             
003692   540c     SUBFWB    0xc,0x0,0x0                                                                                     
003694   0e00     MOVLW     0x0                                                                                             
003696   540d     SUBFWB    0xd,0x0,0x0                                                                                     
003698   0e00     MOVLW     0x0                                                                                             
00369a   540e     SUBFWB    0xe,0x0,0x0                                                                                     
00369c   e20b     BC        0x36b4                                                                                          
                                           		{                                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
00369e   7282     BTG       0x82,0x1,0x0   			LED0_IO=~LED0_IO;                                                             F:\MCP\projects\CAN\canTemp\Source\Main.c
0036a0   ec77     CALL      0x38ee,0x0     			t = tickGet();                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
0036a2   f01c                                                                                                               
0036a4   c004     MOVFF     0x4,0x79                                                                                        
0036a6   f079                                                                                                               
0036a8   c005     MOVFF     0x5,0x7a                                                                                        
0036aa   f07a                                                                                                               
0036ac   c006     MOVFF     0x6,0x7b                                                                                        
0036ae   f07b                                                                                                               
0036b0   c007     MOVFF     0x7,0x7c                                                                                        
0036b2   f07c                                                                                                               
                                           		}                                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		#ifdef USE_BLINDS                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		if ((tickGet()-blinds)>3*TICK_SECOND)                                          F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		{                                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			outCp.type=ptPGM;                                                             F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			outCp.pgm.class=pcSENSOR;                                                     F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			outCp.pgm.id=pstBLIND_TR;                                                     F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			outCp.length=1;                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			outCp.data[0]=blindsGetPrecent();                                             F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			while(!canSendMessage(outCp,PRIO_HIGH));                                      F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			blinds = tickGet();                                                           F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		}                                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		#endif                                                                         F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		#ifdef USE_ADC                                                                 F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		if ((tickGet()-temperature)>TICK_SECOND*2 && getNewTemperature==TRUE) // Each 2 second, read temperature. F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		{                                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			if (lastTemperature==TEMPERATURE_INSIDE) lastTemperature=TEMPERATURE_OUTSIDE; else lastTemperature=TEMPERATURE_INSIDE; F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			adcConvert(lastTemperature);                                                  F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			temperature = tickGet();                                                      F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			getNewTemperature=FALSE;                                                      F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		}                                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		#endif                                                                         F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		#ifdef USE_ADC                                                                 F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		if (adcDone()) // Has temperature, send it to the bus                          F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		{                                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			BYTE decimal;                                                                 F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			signed char tenth;                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			unsigned long q;                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			temperatureRead(&tenth,&decimal);                                             F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			q = adcGetRaw();                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			getNewTemperature=TRUE;                                                       F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			outCp.type=ptPGM;                                                             F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			outCp.pgm.class	=pcSENSOR;                                                    F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			outCp.pgm.id	=(lastTemperature==TEMPERATURE_INSIDE?pstTEMP_INSIDE:pstTEMP_OUTSIDE); F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			outCp.length	=2;                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			outCm.data[1]	= tenth; //  signed 10 an 1 decimal.                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			outCm.data[0]	= decimal; //  Decimal value, 0-9                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           			while(!canSendMessage(outCm,PRIO_HIGH));                                      F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		}                                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		#endif                                                                         F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	}                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
0036b6   0e11     MOVLW     0x11           }                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
0036b8   5ce1     SUBWF     0xe1,0x0,0x0                                                                                    
0036ba   e202     BC        0x36c0                                                                                          
0036bc   6ae1     CLRF      0xe1,0x0                                                                                        
0036be   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036c0   6ee1     MOVWF     0xe1,0x0                                                                                        
0036c2   52e5     MOVF      0xe5,0x1,0x0                                                                                    
0036c4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0036c6   ffd9                                                                                                               
0036c8   0012     RETURN    0x0                                                                                             
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #pragma interrupt high_isr                                                       F:\MCP\projects\CAN\canTemp\Source\Main.c
0036ca   cfda     MOVFF     0xfda,0xfe4    void high_isr(void)                                                              F:\MCP\projects\CAN\canTemp\Source\Main.c
0036cc   ffe4                                                                                                               
0036ce   cfe2     MOVFF     0xfe2,0xfda                                                                                     
0036d0   ffda                                                                                                               
0036d2   cfe9     MOVFF     0xfe9,0xfe4                                                                                     
0036d4   ffe4                                                                                                               
0036d6   cfea     MOVFF     0xfea,0xfe4                                                                                     
0036d8   ffe4                                                                                                               
0036da   cff6     MOVFF     0xff6,0xfe4                                                                                     
0036dc   ffe4                                                                                                               
0036de   cff7     MOVFF     0xff7,0xfe4                                                                                     
0036e0   ffe4                                                                                                               
0036e2   cff5     MOVFF     0xff5,0xfe4                                                                                     
0036e4   ffe4                                                                                                               
0036e6   cff3     MOVFF     0xff3,0xfe4                                                                                     
0036e8   ffe4                                                                                                               
0036ea   cff4     MOVFF     0xff4,0xfe4                                                                                     
0036ec   ffe4                                                                                                               
0036ee   cffa     MOVFF     0xffa,0xfe4                                                                                     
0036f0   ffe4                                                                                                               
0036f2   ee00     LFSR      0x0,0x0                                                                                         
0036f4   f000                                                                                                               
0036f6   0e0b     MOVLW     0xb                                                                                             
0036f8   04e8     DECF      0xe8,0x0,0x0                                                                                    
0036fa   e303     BNC       0x3702                                                                                          
0036fc   cfee     MOVFF     0xfee,0xfe4                                                                                     
0036fe   ffe4                                                                                                               
003700   d7fb     BRA       0x36f8                                                                                          
003702   ee00     LFSR      0x0,0xb                                                                                         
003704   f00b                                                                                                               
003706   0e0a     MOVLW     0xa                                                                                             
003708   04e8     DECF      0xe8,0x0,0x0                                                                                    
00370a   e303     BNC       0x3712                                                                                          
00370c   cfee     MOVFF     0xfee,0xfe4                                                                                     
00370e   ffe4                                                                                                               
003710   d7fb     BRA       0x3708                                                                                          
003712   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
003714   ec8f     CALL      0x311e,0x0     	canISR();                                                                       F:\MCP\projects\CAN\canTemp\Source\Main.c
003716   f018                                                                                                               
003718   52e5     MOVF      0xe5,0x1,0x0   }                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
00371a   ee00     LFSR      0x0,0x14                                                                                        
00371c   f014                                                                                                               
00371e   0e0a     MOVLW     0xa                                                                                             
003720   04e8     DECF      0xe8,0x0,0x0                                                                                    
003722   e303     BNC       0x372a                                                                                          
003724   cfe5     MOVFF     0xfe5,0xfed                                                                                     
003726   ffed                                                                                                               
003728   d7fb     BRA       0x3720                                                                                          
00372a   ee00     LFSR      0x0,0xa                                                                                         
00372c   f00a                                                                                                               
00372e   0e0b     MOVLW     0xb                                                                                             
003730   04e8     DECF      0xe8,0x0,0x0                                                                                    
003732   e303     BNC       0x373a                                                                                          
003734   cfe5     MOVFF     0xfe5,0xfed                                                                                     
003736   ffed                                                                                                               
003738   d7fb     BRA       0x3730                                                                                          
00373a   cfe5     MOVFF     0xfe5,0xffa                                                                                     
00373c   fffa                                                                                                               
00373e   cfe5     MOVFF     0xfe5,0xff4                                                                                     
003740   fff4                                                                                                               
003742   cfe5     MOVFF     0xfe5,0xff3                                                                                     
003744   fff3                                                                                                               
003746   cfe5     MOVFF     0xfe5,0xff5                                                                                     
003748   fff5                                                                                                               
00374a   cfe5     MOVFF     0xfe5,0xff7                                                                                     
00374c   fff7                                                                                                               
00374e   cfe5     MOVFF     0xfe5,0xff6                                                                                     
003750   fff6                                                                                                               
003752   cfe5     MOVFF     0xfe5,0xfea                                                                                     
003754   ffea                                                                                                               
003756   cfe5     MOVFF     0xfe5,0xfe9                                                                                     
003758   ffe9                                                                                                               
00375a   cfe5     MOVFF     0xfe5,0xfda                                                                                     
00375c   ffda                                                                                                               
00375e   0011     RETFIE    0x1                                                                                             
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #pragma interrupt low_isr                                                        F:\MCP\projects\CAN\canTemp\Source\Main.c
003760   cfda     MOVFF     0xfda,0xfe4    void low_isr(void)                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
003762   ffe4                                                                                                               
003764   cfe2     MOVFF     0xfe2,0xfda                                                                                     
003766   ffda                                                                                                               
003768   52e6     MOVF      0xe6,0x1,0x0                                                                                    
                                           {                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#ifdef USE_ADC                                                                  F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		adcISR();                                                                      F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#endif                                                                          F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#ifdef USE_BLINDS                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		blindsISR();                                                                   F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#endif                                                                          F:\MCP\projects\CAN\canTemp\Source\Main.c
00376a   52e5     MOVF      0xe5,0x1,0x0   }                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
00376c   cfe5     MOVFF     0xfe5,0xfda                                                                                     
00376e   ffda                                                                                                               
003770   0011     RETFIE    0x1                                                                                             
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           /*                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *	Function: mainInit                                                             F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *	Input:	none                                                                    F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *	Output: none                                                                   F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *	Affects: Se code                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           */                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           void mainInit()                                                                  F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           {                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
003772   9294     BCF       0x94,0x1,0x0   	LED0_TRIS=0;                                                                    F:\MCP\projects\CAN\canTemp\Source\Main.c
003774   9894     BCF       0x94,0x4,0x0   	BLINDS0_TRIS=0;                                                                 F:\MCP\projects\CAN\canTemp\Source\Main.c
003776   9a94     BCF       0x94,0x5,0x0   	BLINDS0P_TRIS=0;                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	// Enable Interrupts                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
003778   8ef2     BSF       0xf2,0x7,0x0       INTCONbits.GIEH = 1;                                                         F:\MCP\projects\CAN\canTemp\Source\Main.c
00377a   8cf2     BSF       0xf2,0x6,0x0       INTCONbits.GIEL = 1;                                                         F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	// Enable interrupt prirority                                                   F:\MCP\projects\CAN\canTemp\Source\Main.c
00377c   8ed0     BSF       0xd0,0x7,0x0   	RCONbits.IPEN=1;                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
00377e   0012     RETURN    0x0            }                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           /*                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *	Function: canParse                                                             F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *	Input:	Received can message                                                    F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *	Output: none                                                                   F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *	Pre-conditions: canInit and received packet.                                   F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *	Affects: Sensors/actuators/etc. See code.                                      F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           */                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
003780   cfd9     MOVFF     0xfd9,0xfe6    void canParse(CAN_PACKET cp)                                                     F:\MCP\projects\CAN\canTemp\Source\Main.c
003782   ffe6                                                                                                               
003784   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003786   ffd9                                                                                                               
                                           {                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#ifdef USE_BLINDS                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	if (cp.pgm.class==pcACTUATOR && cp.pgm.id==patBLIND_TR)                         F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	{                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           		blindsTurn(cp.data[0]);                                                        F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	}                                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           	#endif                                                                          F:\MCP\projects\CAN\canTemp\Source\Main.c
003788   52e5     MOVF      0xe5,0x1,0x0   }                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
00378a   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
00378c   ffd9                                                                                                               
00378e   0012     RETURN    0x0                                                                                             
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           // Below are mandantory when using bootloader                                    F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           // define DEBUG_MODE to use without bootloader.                                  F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #ifndef DEBUG_MODE                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           extern void _startup (void);                                                     F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #pragma code _RESET_INTERRUPT_VECTOR = RM_RESET_VECTOR                           F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           void _reset (void)                                                               F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           {                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
003000   ef8f     GOTO      0x391e             _asm goto _startup _endasm                                                   F:\MCP\projects\CAN\canTemp\Source\Main.c
003002   f01c                                                                                                               
003004   0012     RETURN    0x0            }                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #pragma code                                                                     F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #endif                                                                           F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #pragma code _HIGH_INTERRUPT_VECTOR = RM_HIGH_INTERRUPT_VECTOR                   F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           void _high_ISR (void)                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           {                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
003008   ef65     GOTO      0x36ca         	_asm GOTO high_isr _endasm                                                      F:\MCP\projects\CAN\canTemp\Source\Main.c
00300a   f01b                                                                                                               
00300c   0012     RETURN    0x0            }                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #pragma code                                                                     F:\MCP\projects\CAN\canTemp\Source\Main.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #pragma code _LOW_INTERRUPT_VECTOR = RM_LOW_INTERRUPT_VECTOR                     F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           void _low_ISR (void)                                                             F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           {                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
003018   efb0     GOTO      0x3760             _asm GOTO low_isr _endasm                                                    F:\MCP\projects\CAN\canTemp\Source\Main.c
00301a   f01b                                                                                                               
00301c   0012     RETURN    0x0            }                                                                                F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           #pragma code                                                                     F:\MCP\projects\CAN\canTemp\Source\Main.c
                                           /*********************************************************************           F:\MCP\projects\CAN\Include\EEAccess.c
                                            *                                                                               F:\MCP\projects\CAN\Include\EEAccess.c
                                            *   Functions for reading and writing to EEPROM.                                F:\MCP\projects\CAN\Include\EEAccess.c
                                            *                                                                               F:\MCP\projects\CAN\Include\EEAccess.c
                                            *********************************************************************           F:\MCP\projects\CAN\Include\EEAccess.c
                                            * FileName:        	$HeadURL: http://svn.arune.se/svn/HomeAutomation/trunk/EmbeddedSoftware/PIC/Include/EEAccess.c $ F:\MCP\projects\CAN\Include\EEAccess.c
                                            * Last changed:	$LastChangedDate: 2006-11-20 21:31:03 +0100 (m√•, 20 nov 2006) $ F:\MCP\projects\CAN\Include\EEAccess.c
                                            * By:			$LastChangedBy: johboh $                                                F:\MCP\projects\CAN\Include\EEAccess.c
                                            * Revision:		$Revision: 139 $                                                   F:\MCP\projects\CAN\Include\EEAccess.c
                                            ********************************************************************/           F:\MCP\projects\CAN\Include\EEAccess.c
                                           #include <p18cxxx.h>                                                             F:\MCP\projects\CAN\Include\EEAccess.c
                                           #include <EEaccess.h>                                                            F:\MCP\projects\CAN\Include\EEAccess.c
                                                                                                                            F:\MCP\projects\CAN\Include\EEAccess.c
                                           /*                                                                               F:\MCP\projects\CAN\Include\EEAccess.c
                                           *	Function: EERead                                                               F:\MCP\projects\CAN\Include\EEAccess.c
                                           *                                                                                F:\MCP\projects\CAN\Include\EEAccess.c
                                           *	Input:	WORD address to read from.                                              F:\MCP\projects\CAN\Include\EEAccess.c
                                           *	Output: Byte read.                                                             F:\MCP\projects\CAN\Include\EEAccess.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\Include\EEAccess.c
                                           *	Affects: none.                                                                 F:\MCP\projects\CAN\Include\EEAccess.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\Include\EEAccess.c
                                           */                                                                               F:\MCP\projects\CAN\Include\EEAccess.c
003790   cfd9     MOVFF     0xfd9,0xfe6    BYTE EERead(WORD addr)                                                           F:\MCP\projects\CAN\Include\EEAccess.c
003792   ffe6                                                                                                               
003794   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
003796   ffd9                                                                                                               
                                           {                                                                                F:\MCP\projects\CAN\Include\EEAccess.c
003798   0efd     MOVLW     0xfd           	EEADRH=(BYTE)(addr>>8);                                                         F:\MCP\projects\CAN\Include\EEAccess.c
00379a   cfdb     MOVFF     0xfdb,0xb                                                                                       
00379c   f00b                                                                                                               
00379e   0efe     MOVLW     0xfe                                                                                            
0037a0   cfdb     MOVFF     0xfdb,0xc                                                                                       
0037a2   f00c                                                                                                               
0037a4   c00c     MOVFF     0xc,0xb                                                                                         
0037a6   f00b                                                                                                               
0037a8   6a0c     CLRF      0xc,0x0                                                                                         
0037aa   500b     MOVF      0xb,0x0,0x0                                                                                     
0037ac   6eaa     MOVWF     0xaa,0x0                                                                                        
0037ae   0eff     MOVLW     0xff           	EEADR=(BYTE)(addr & 0xFF);                                                      F:\MCP\projects\CAN\Include\EEAccess.c
0037b0   6ee7     MOVWF     0xe7,0x0                                                                                        
0037b2   0efd     MOVLW     0xfd                                                                                            
0037b4   cfdb     MOVFF     0xfdb,0xb                                                                                       
0037b6   f00b                                                                                                               
0037b8   0efe     MOVLW     0xfe                                                                                            
0037ba   cfdb     MOVFF     0xfdb,0xc                                                                                       
0037bc   f00c                                                                                                               
0037be   50e7     MOVF      0xe7,0x0,0x0                                                                                    
0037c0   160b     ANDWF     0xb,0x1,0x0                                                                                     
0037c2   6a0c     CLRF      0xc,0x0                                                                                         
0037c4   500b     MOVF      0xb,0x0,0x0                                                                                     
0037c6   6ea9     MOVWF     0xa9,0x0                                                                                        
0037c8   9ea6     BCF       0xa6,0x7,0x0   	EECON1bits.EEPGD=0;                                                             F:\MCP\projects\CAN\Include\EEAccess.c
0037ca   9ca6     BCF       0xa6,0x6,0x0   	EECON1bits.CFGS=0;                                                              F:\MCP\projects\CAN\Include\EEAccess.c
0037cc   80a6     BSF       0xa6,0x0,0x0   	EECON1bits.RD=1;                                                                F:\MCP\projects\CAN\Include\EEAccess.c
0037ce   50a8     MOVF      0xa8,0x0,0x0   	return EEDATA;	                                                                 F:\MCP\projects\CAN\Include\EEAccess.c
0037d0   d000     BRA       0x37d2                                                                                          
0037d2   52e5     MOVF      0xe5,0x1,0x0   }                                                                                F:\MCP\projects\CAN\Include\EEAccess.c
0037d4   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
0037d6   ffd9                                                                                                               
0037d8   0012     RETURN    0x0                                                                                             
                                                                                                                            F:\MCP\projects\CAN\Include\EEAccess.c
                                                                                                                            F:\MCP\projects\CAN\Include\EEAccess.c
                                           /*                                                                               F:\MCP\projects\CAN\Include\EEAccess.c
                                           *	Function: EEWrite                                                              F:\MCP\projects\CAN\Include\EEAccess.c
                                           *                                                                                F:\MCP\projects\CAN\Include\EEAccess.c
                                           *	Input:	WORD address to write to and BYTE data to write.                        F:\MCP\projects\CAN\Include\EEAccess.c
                                           *	Output: none.                                                                  F:\MCP\projects\CAN\Include\EEAccess.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\Include\EEAccess.c
                                           *	Affects: none.                                                                 F:\MCP\projects\CAN\Include\EEAccess.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\Include\EEAccess.c
                                           */                                                                               F:\MCP\projects\CAN\Include\EEAccess.c
0037da   cfd9     MOVFF     0xfd9,0xfe6    void EEWrite(WORD addr,BYTE data)                                                F:\MCP\projects\CAN\Include\EEAccess.c
0037dc   ffe6                                                                                                               
0037de   cfe1     MOVFF     0xfe1,0xfd9                                                                                     
0037e0   ffd9                                                                                                               
                                           {                                                                                F:\MCP\projects\CAN\Include\EEAccess.c
0037e2   98a1     BCF       0xa1,0x4,0x0   	PIR2bits.EEIF=0;                                                                F:\MCP\projects\CAN\Include\EEAccess.c
0037e4   0efd     MOVLW     0xfd           	EEADRH=(BYTE)(addr>>8);                                                         F:\MCP\projects\CAN\Include\EEAccess.c
0037e6   cfdb     MOVFF     0xfdb,0xb                                                                                       
0037e8   f00b                                                                                                               
0037ea   0efe     MOVLW     0xfe                                                                                            
0037ec   cfdb     MOVFF     0xfdb,0xc                                                                                       
0037ee   f00c                                                                                                               
0037f0   c00c     MOVFF     0xc,0xb                                                                                         
0037f2   f00b                                                                                                               
0037f4   6a0c     CLRF      0xc,0x0                                                                                         
0037f6   500b     MOVF      0xb,0x0,0x0                                                                                     
0037f8   6eaa     MOVWF     0xaa,0x0                                                                                        
0037fa   0eff     MOVLW     0xff           	EEADR=(BYTE)(addr & 0xFF);                                                      F:\MCP\projects\CAN\Include\EEAccess.c
0037fc   6ee7     MOVWF     0xe7,0x0                                                                                        
0037fe   0efd     MOVLW     0xfd                                                                                            
003800   cfdb     MOVFF     0xfdb,0xb                                                                                       
003802   f00b                                                                                                               
003804   0efe     MOVLW     0xfe                                                                                            
003806   cfdb     MOVFF     0xfdb,0xc                                                                                       
003808   f00c                                                                                                               
00380a   50e7     MOVF      0xe7,0x0,0x0                                                                                    
00380c   160b     ANDWF     0xb,0x1,0x0                                                                                     
00380e   6a0c     CLRF      0xc,0x0                                                                                         
003810   500b     MOVF      0xb,0x0,0x0                                                                                     
003812   6ea9     MOVWF     0xa9,0x0                                                                                        
003814   0efc     MOVLW     0xfc           	EEDATA=data;                                                                    F:\MCP\projects\CAN\Include\EEAccess.c
003816   50db     MOVF      0xdb,0x0,0x0                                                                                    
003818   6ea8     MOVWF     0xa8,0x0                                                                                        
00381a   9ea6     BCF       0xa6,0x7,0x0   	EECON1bits.EEPGD=0;                                                             F:\MCP\projects\CAN\Include\EEAccess.c
00381c   9ca6     BCF       0xa6,0x6,0x0   	EECON1bits.CFGS=0;                                                              F:\MCP\projects\CAN\Include\EEAccess.c
00381e   84a6     BSF       0xa6,0x2,0x0   	EECON1bits.WREN=1;                                                              F:\MCP\projects\CAN\Include\EEAccess.c
003820   9ef2     BCF       0xf2,0x7,0x0   	INTCONbits.GIE=0;                                                               F:\MCP\projects\CAN\Include\EEAccess.c
003822   0e55     MOVLW     0x55           	EECON2=0x55;                                                                    F:\MCP\projects\CAN\Include\EEAccess.c
003824   6ea7     MOVWF     0xa7,0x0                                                                                        
003826   0eaa     MOVLW     0xaa           	EECON2=0xAA;                                                                    F:\MCP\projects\CAN\Include\EEAccess.c
003828   6ea7     MOVWF     0xa7,0x0                                                                                        
00382a   82a6     BSF       0xa6,0x1,0x0   	EECON1bits.WR=1;                                                                F:\MCP\projects\CAN\Include\EEAccess.c
00382c   8ef2     BSF       0xf2,0x7,0x0   	INTCONbits.GIE=1;                                                               F:\MCP\projects\CAN\Include\EEAccess.c
00382e   a8a1     BTFSS     0xa1,0x4,0x0   	while(!PIR2bits.EEIF);                                                          F:\MCP\projects\CAN\Include\EEAccess.c
003830   d7fe     BRA       0x382e                                                                                          
003832   94a6     BCF       0xa6,0x2,0x0   	EECON1bits.WREN=0;                                                              F:\MCP\projects\CAN\Include\EEAccess.c
003834   52e5     MOVF      0xe5,0x1,0x0   }                                                                                F:\MCP\projects\CAN\Include\EEAccess.c
003836   cfe7     MOVFF     0xfe7,0xfd9                                                                                     
003838   ffd9                                                                                                               
00383a   0012     RETURN    0x0                                                                                             
                                           /*********************************************************************           F:\MCP\projects\CAN\Include\adc.c
                                            *                                                                               F:\MCP\projects\CAN\Include\adc.c
                                            *   Functions for reading ADC                                                   F:\MCP\projects\CAN\Include\adc.c
                                            *                                                                               F:\MCP\projects\CAN\Include\adc.c
                                            *********************************************************************           F:\MCP\projects\CAN\Include\adc.c
                                            * FileName:        $HeadURL: http://svn.arune.se/svn/HomeAutomation/trunk/EmbeddedSoftware/PIC/Include/adc.c $ F:\MCP\projects\CAN\Include\adc.c
                                            * Last changed:	$LastChangedDate: 2006-11-20 21:31:03 +0100 (m√•, 20 nov 2006) $ F:\MCP\projects\CAN\Include\adc.c
                                            * By:				$LastChangedBy: johboh $                                               F:\MCP\projects\CAN\Include\adc.c
                                            * Revision:		$Revision: 139 $                                                   F:\MCP\projects\CAN\Include\adc.c
                                            ********************************************************************/           F:\MCP\projects\CAN\Include\adc.c
                                           #include <adc.h>                                                                 F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           #ifdef USE_ADC                                                                   F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           static unsigned long TEMP_VALUE;                                                 F:\MCP\projects\CAN\Include\adc.c
                                           static unsigned int TEMP_COUNT;                                                  F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           BOOL TEMP_DONE = FALSE;                                                          F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           /*                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           *	Function: adcInit                                                              F:\MCP\projects\CAN\Include\adc.c
                                           *                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           *	Input:	True or false to use external voltage reference or not. portCfg is portconfiguration. F:\MCP\projects\CAN\Include\adc.c
                                           *	Output: none.                                                                  F:\MCP\projects\CAN\Include\adc.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\Include\adc.c
                                           *	Affects: none.                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           */                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           void adcInit(BOOL useExtRef,BYTE portCfg)                                        F:\MCP\projects\CAN\Include\adc.c
                                           {                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           	// Setup ADC to use low interrupt prior and external ref or not.                F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	ADCON1 = 0b00000000 | ((1 & useExtRef)<<4) | (0xF & portCfg);                   F:\MCP\projects\CAN\Include\adc.c
                                           	ADCON0 = 0b00000000;                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	ADCON2 = 0b10101011;                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	//useExtRef                                                                     F:\MCP\projects\CAN\Include\adc.c
                                           	ADCON0bits.ADON = 1;                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	PIR1bits.ADIF = 0;                                                              F:\MCP\projects\CAN\Include\adc.c
                                           	PIE1bits.ADIE = 1;                                                              F:\MCP\projects\CAN\Include\adc.c
                                           	IPR1bits.ADIP = 0; // Low priority                                              F:\MCP\projects\CAN\Include\adc.c
                                           }                                                                                F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           /*                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           *	Function: adcISR                                                               F:\MCP\projects\CAN\Include\adc.c
                                           *                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           *	Input:	ADC interrupt rotune. Need to be called from LOW ISR.                   F:\MCP\projects\CAN\Include\adc.c
                                           *	Output: none.                                                                  F:\MCP\projects\CAN\Include\adc.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\Include\adc.c
                                           *	Affects: none.                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           */                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           void adcISR(void)                                                                F:\MCP\projects\CAN\Include\adc.c
                                           {                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           	if (PIE1bits.ADIE && PIR1bits.ADIF)                                             F:\MCP\projects\CAN\Include\adc.c
                                           	{                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           		PIR1bits.ADIF = 0;                                                             F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           		TEMP_VALUE+=((int)ADRESH)<<8 | ADRESL;                                         F:\MCP\projects\CAN\Include\adc.c
                                           		TEMP_COUNT++;                                                                  F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           		if (TEMP_COUNT>=TEMP_SAMPLES)                                                  F:\MCP\projects\CAN\Include\adc.c
                                           		{                                                                              F:\MCP\projects\CAN\Include\adc.c
                                           			TEMP_VALUE = TEMP_VALUE/TEMP_COUNT;                                           F:\MCP\projects\CAN\Include\adc.c
                                           			TEMP_DONE = TRUE;                                                             F:\MCP\projects\CAN\Include\adc.c
                                           		}                                                                              F:\MCP\projects\CAN\Include\adc.c
                                           		else                                                                           F:\MCP\projects\CAN\Include\adc.c
                                           		{                                                                              F:\MCP\projects\CAN\Include\adc.c
                                           			Delay10TCYx(100);                                                             F:\MCP\projects\CAN\Include\adc.c
                                           			ADCON0bits.GO = 1;                                                            F:\MCP\projects\CAN\Include\adc.c
                                           		}                                                                              F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	}                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           }                                                                                F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           /*                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           *	Function: adcConvert                                                           F:\MCP\projects\CAN\Include\adc.c
                                           *                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           *	Input:	Channel to start convert. Between 0 and 15                              F:\MCP\projects\CAN\Include\adc.c
                                           *	Output: none.                                                                  F:\MCP\projects\CAN\Include\adc.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\Include\adc.c
                                           *	Affects: none.                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           */                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           BOOL adcConvert(BYTE channel)                                                    F:\MCP\projects\CAN\Include\adc.c
                                           {                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           	if (channel>15) return FALSE;                                                   F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	TEMP_VALUE = 0;                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           	TEMP_COUNT = 0;                                                                 F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	ADCON0 = (channel << 2)  | (ADCON0 & 0b11000011);                               F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	TEMP_DONE = FALSE;                                                              F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	ADCON0bits.GO = 1;                                                              F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	return TRUE;                                                                    F:\MCP\projects\CAN\Include\adc.c
                                           }                                                                                F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           /*                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           *	Function: adcRead                                                              F:\MCP\projects\CAN\Include\adc.c
                                           *                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           *	Input:	none.                                                                   F:\MCP\projects\CAN\Include\adc.c
                                           *	Output: Raw read data.                                                         F:\MCP\projects\CAN\Include\adc.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\Include\adc.c
                                           *	Affects: none.                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           */                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           int adcRead(void)                                                                F:\MCP\projects\CAN\Include\adc.c
                                           {                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           	TEMP_DONE=FALSE;                                                                F:\MCP\projects\CAN\Include\adc.c
                                           	return TEMP_VALUE;                                                              F:\MCP\projects\CAN\Include\adc.c
                                           }                                                                                F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           /*                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           *	Function: temperatureRead                                                      F:\MCP\projects\CAN\Include\adc.c
                                           *                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           *	Input:	none.                                                                   F:\MCP\projects\CAN\Include\adc.c
                                           *	Output: XX.Y C, where tenth is XX and decimal is Y                             F:\MCP\projects\CAN\Include\adc.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\Include\adc.c
                                           *	Affects: none.                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           */                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           void temperatureRead(signed char *tenth, BYTE *decimal)                          F:\MCP\projects\CAN\Include\adc.c
                                           {                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           	// assuming 2.5V ref and TC47                                                   F:\MCP\projects\CAN\Include\adc.c
                                           	signed int i = 0, v11,v01,tfloat;                                               F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	tfloat =((TEMP_VALUE * 39)>>4) - 499;                                           F:\MCP\projects\CAN\Include\adc.c
                                           	                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           	v11 = tfloat/10;                                                                F:\MCP\projects\CAN\Include\adc.c
                                           	v01 = tfloat-v11*10;                                                            F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	     if (v01>=0 && v01<=2) v01 = 0;                                             F:\MCP\projects\CAN\Include\adc.c
                                           	else if (v01>=3 && v01<=7) v01 = 5;                                             F:\MCP\projects\CAN\Include\adc.c
                                           	else  { v01 = 0; v11++;}                                                        F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           	*tenth = (signed char)v11;                                                      F:\MCP\projects\CAN\Include\adc.c
                                           	*decimal = (BYTE)v01;                                                           F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           		TEMP_DONE=FALSE;                                                               F:\MCP\projects\CAN\Include\adc.c
                                           }                                                                                F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           unsigned long adcGetRaw()                                                        F:\MCP\projects\CAN\Include\adc.c
                                           {                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           	return TEMP_VALUE;                                                              F:\MCP\projects\CAN\Include\adc.c
                                           }                                                                                F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           /*                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           *	Function: adcDone                                                              F:\MCP\projects\CAN\Include\adc.c
                                           *                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           *	Input:	none.                                                                   F:\MCP\projects\CAN\Include\adc.c
                                           *	Output: If adc convertion is done or not.                                      F:\MCP\projects\CAN\Include\adc.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\Include\adc.c
                                           *	Affects: none.                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\Include\adc.c
                                           */                                                                               F:\MCP\projects\CAN\Include\adc.c
                                           BOOL adcDone(void)                                                               F:\MCP\projects\CAN\Include\adc.c
                                           {                                                                                F:\MCP\projects\CAN\Include\adc.c
                                           	return TEMP_DONE;                                                               F:\MCP\projects\CAN\Include\adc.c
                                           }                                                                                F:\MCP\projects\CAN\Include\adc.c
                                                                                                                            F:\MCP\projects\CAN\Include\adc.c
                                           #endif                                                                           F:\MCP\projects\CAN\Include\adc.c
                                           /*********************************************************************           F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                            *                                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                            *   Functions for controlling blinds                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                            *                                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                            *********************************************************************           F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                            * FileName:        $HeadURL: http://svn.arune.se/svn/HomeAutomation/trunk/EmbeddedSoftware/PIC/canTemp/Source/blinds.c $ F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                            * Last changed:	$LastChangedDate: 2007-02-03 16:58:13 +0100 (l√∂, 03 feb 2007) $ F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                            * By:				$LastChangedBy: johboh $                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                            * Revision:		$Revision: 282 $                                                   F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                            ********************************************************************/           F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           #include <blinds.h>                                                              F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           #ifdef USE_BLINDS                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           static unsigned int timerVal = 50536;                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           static unsigned int turnOffIO = 0;                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           static signed char currentPrecent = 0;                                           F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           /*                                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Function: blindsInit                                                           F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Input:	none.                                                                   F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Output: none.                                                                  F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Affects: none.                                                                 F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           */                                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           void blindsInit()                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           {                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	// setup timer one on 0.5ms.                                                    F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	// 16 bit write, system clock, prescale 2 bit, oscillator off,                  F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	T1CON = 0b11000001;                                                             F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	TMR1H=((timerVal&0xFF00)>>8);                                                   F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	TMR1L=(timerVal&0xFF);                                                          F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	PIR1bits.TMR1IF = 0;                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	PIE1bits.TMR1IE = 1;                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	IPR1bits.TMR1IP = 0; // Low prior                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           }                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           /*                                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Function: blindsGetAngle                                                       F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Input:	none.                                                                   F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Output: angle.                                                                 F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Affects: none.                                                                 F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           */                                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           BYTE blindsGetPrecent()                                                          F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           {                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	return currentPrecent;                                                          F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           }                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           /*                                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Function: blindsTurn                                                           F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Input:	Angle to turn to.                                                       F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Output: none.                                                                  F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Affects: none.                                                                 F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           */                                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           void blindsTurn(BYTE precent)                                                    F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           {                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	// 65536-TIME/0,0000001                                                         F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	// -90 0.5 ms = 60536 (5000)                                                    F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	// 0   1.5 ms = 50536 (15000)                                                   F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	// 90  2.5 ms = 40536 (25000)                                                   F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	BLINDS0P_IO=1;                                                                  F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	turnOffIO = IO_TIMEOUT;                                                         F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	/*                                                                              F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		if (angle<ANGLE_MIN) {timerVal=ANGLE_MIN_TIMER; currentAngle=ANGLE_MIN; }      F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		else if (angle>ANGLE_MAX) {timerVal=ANGLE_MAX_TIMER; currentAngle=ANGLE_MAX; } F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		else                                                                           F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		{                                                                              F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           			timerVal=60536-(unsigned int)((90+(signed int)angle)*111.111);                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		    currentAngle=angle;                                                        F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		}                                                                              F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	*/                                                                              F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	/*                                                                              F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	angle=precent*                                                                  F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                               -50=k*100+m                                                                  F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                               60=k*0+m                                                                     F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                               angle=-1.1x+60                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	*/                                                                              F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	currentPrecent=precent;                                                         F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	if (precent>100) { currentPrecent=100; }                                        F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	if (precent<0) { currentPrecent=0; }                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	timerVal=60536-(unsigned int)((90+(-1.05*(signed int)currentPrecent+60))*111.111); F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           }                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           /*                                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Function: blindsISR                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Input:	none.                                                                   F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Output: none.                                                                  F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Pre-conditions: none                                                           F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Affects: none.                                                                 F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           *	Depends: none.                                                                 F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           */                                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           void blindsISR(void)                                                             F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           {                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	if (PIR1bits.TMR1IF == 1 && PIE1bits.TMR1IE == 1)                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	{                                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		TMR1H=((timerVal&0xFF00)>>8);                                                  F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		TMR1L=(timerVal&0xFF);                                                         F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		BLINDS0_IO=~BLINDS0_IO;                                                        F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		if (turnOffIO--<1)                                                             F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		{                                                                              F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           			BLINDS0P_IO=0;                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		}                                                                              F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           		PIR1bits.TMR1IF = 0;                                                           F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           	}                                                                               F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           }                                                                                F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                                                                                                            F:\MCP\projects\CAN\canTemp\Source\blinds.c
                                           #endif                                                                           F:\MCP\projects\CAN\canTemp\Source\blinds.c
