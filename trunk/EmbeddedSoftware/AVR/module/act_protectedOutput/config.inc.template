## Section act_protectedOutput -- Do not edit this line

# Define a pair of output/input pins. The diagnostics pin is used as enable flag for the protected output.
# External hardware can monitor the output and assert the diagnostics pin whenever the output must be turned off, to protect whatever is connected to it.

# Output pin.
act_protectedOutput_OUTPUT_PIN=GPIO_D5

# Defines the ACTIVE state of the OUTPUT pin. 1 means output is active high, 0 means active low.
act_protectedOutput_OUTPUT_PIN_ACTIVE_STATE=1

# Diagnostics pin. Asserted from external monitors if the output needs to be disabled.
act_protectedOutput_DIAG_PIN=GPIO_D2
act_protectedOutput_DIAG_PIN_PCINT=<PCINT>

# Defines the ASSERTED state of the DIAG pin. 1 means DIAG is asserted HIGH during error conditions, 0 means it is asserted low.
act_protectedOutput_DIAG_PIN_ASSERTED_STATE=0

# Enables internal pull-up resistor for the DIAG pin. This is only used if ASSERTED state is defined as 0 (i.e. active low).
act_protectedOutput_DIAG_PIN_PULL_ENABLED=0

# When the output pin has been turned off by a DIAG assertion, software can try to enable it again after a specified timeout.
# Set timeout to 0 to disable this mechanism.
act_protectedOutput_RETRY_TIMER=<TIMER>
act_protectedOutput_RETRY_TIMER_TIME_S=s10

# This timer polls the DIAG pin. Perhaps change this so we trigger on interrupt instead?
act_protectedOutput_DIAG_POLL_TIMER=<TIMER>
act_protectedOutput_DIAG_POLL_TIMER_TIME_MS=100

act_protectedOutput_ID=<ID>

## End section act_protectedOutput -- Do not edit this line
